      PROGRAM MAIN
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ARRAYS/ABC(19200)
      COMMON/INFO/NATOMS,CHARGE,MULTIP,AN(35),C(35,3),N
      COMMON/PERTBL/EL(18),NAME(20)
      COMMON/ORB/ORB(9)
      COMMON/GAB/XYZ(2000)
      COMMON/INFO1/CZ(35),U(80),ULIM(35),LLIM(35),NELECS,OCCA,OCCB
      COMMON/OPTION/OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MON
     1O,NEIG 
      COMMON/AUXINT/A(17),B(17)
      COMMON/IMAG/AIMAGE(12880)
      COMMON/COMP/COMP(6400),BGAUSS,IER
      COMMON/EORK/WORK1(80),WORK2(12800),LAMBDA(80),IWORK(160)
      COMMON/GAUSTR/V1S2P(100),V2S2P(100),V2P2S(100),V2P2P1(100),V2P2P2(
     1 100),T1S2P(100),T2S2P(100),T2P2P1(100),T2P2P2(100),U2S2P(100),U2P
     2 2P1(100),U2P2P2(100),INDX1(35,35),INDX2(35,35),INVJ1I(100),INVJ1J
     3 (100),INVJ2I(100),INVJ2J(100),INVT1I(100),INVT1J(100),INVT2I(100)
     4 ,INVT2J(100),D(35,35),Y1(80,3,3),Y2(80,3,3)
      COMPLEX*16 COMP,LAMBDA,WORK1,WORK2
      INTEGER OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MONO,NEIG
      INTEGER ORB,EL,AN,CHARGE,CZ,U,ULIM,OCCA,OCCB
  100 CONTINUE
      READ(5,20,END=99)(NAME(I),I=1,20)
   20 FORMAT(20A4)
      WRITE(6,30) (NAME(I),I=1,20)
   30 FORMAT(1H1,20A4)
      READ(5,40)OPTION,OPNCLO,CONTR
   40 FORMAT(A4,1X,A4,1X,A4)
      WRITE(6,45)OPTION,OPNCLO,CONTR
   45 FORMAT(1H0,10X,2A4,'METHOD',1X,A4,'CONTRIBUTION')
      READ(5,50) NATOMS,CHARGE,MULTIP
   50 FORMAT(3I4)
      WRITE(6,55) NATOMS,CHARGE,MULTIP
   55 FORMAT(1H0,5X,I4,'ATOMS  CHARGE =',I4,'  MULIPLICITY =',I4/)
      DO 10 I=1,NATOMS
      READ(5,70)AN(I),C(I,1),C(I,2),C(I,3)
   70 FORMAT(I4,6X,3F10.5)
      WRITE(6,75)AN(I),C(I,1),C(I,2),C(I,3)   
   75 FORMAT(1H ,10X,I4,6X,3F10.5)
      DO 9 J=1,3
    9 C(I,J)=C(I,J)/0.529167D0
   10 CONTINUE
      BGAUSS=500.
      WRITE(6,65) BGAUSS
   65 FORMAT(1H0,5X,'EXTERNAL MAGNETIC FIELD = ',F10.4,' X 10**4 GAUSS')
      IF (OPTION.NE.INDO) GO TO 6
    1 DO 5 I=1,NATOMS
      IF(AN(1).LE.9) GO TO 4
    2 WRITE(6,3)
    3 FORMAT(1H0,5X,'THIS PROGRAM DOES NOT DO INDO CALCULATIONS FOR MOLE
     1CULES CONTAINED ELEMENTS HIGHER THAN FLUORINE')
      STOP
    4 CONTINUE
    5 CONTINUE
    6 CONTINUE
      CALL COEFFT
      CALL INTGRL
      LLL=0
  200 CONTINUE
      IF(LLL.GE.3) GO TO 300
        LLL=LLL+1
        CALL HUCKCL(LLL)
        CALL SCFCLO
        CALL CHSFT(LLL)
        GO TO 200
  300 CONTINUE
      GO TO 100
   99 CONTINUE
      CALL EXIT
      STOP
      END


      BLOCK DATA
      COMMON/ORB/ORB(9)
      COMMON/PERTBL/EL(18),NAME(20)
      COMMON/OPTION/OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MON
     1O,NEIG
      INTEGER OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MONO,NEIG
      INTEGER ORB,EL
      DATA CNDO/'CNDO'/
      DATA INDO/'INDO'/
      DATA OPEN/'OPEN'/
      DATA CLOSED/'CLSD'/
      DATA MONO/'MONO'/
      DATA NEIG/'NEIG'/
      DATA ORB/'S','PX','PY',' PZ','DZ2','DXZ','DYZ','DX-Y','DXY'/
      DATA EL/'   H','  HE','  LI','  BE','   B','   C','   N','   O',
     1   '   F','  NE','  NA','  MG','  AL','  SI','   P','   S','  CL',
     2   '  AR'/
      END



      SUBROUTINE INTGRL
      IMPLICIT REAL*8(A-H,O-Z)
C     ATOMIC INTEGRALS FOR CNDO CALCULATIONS
      COMMON/ARRAYS/S(80,80),Y(9,5,203),Z(17,45),XX(2900)
      COMMON/INFO/NATOMS,CHARGE,MULTIP,AN(35),C(35,3),N
      COMMON/INFO1/CZ(35),U(80),ULIM(35),LLIM(35),NELECS,OCCA,OCCB
      COMMON/GAB/XXX(400),GAMMA(35,35),T(9,9),PAIRS(9,9),TEMP(9,9),C1(3)
     1,C2(3),YYY(126)
      COMMON/AUXINT/A(17),B(17)
      COMMON/OPTION/OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MON
     1O,NEIG
      COMMON/COMP/BCOMPL(80,80),BGAUSS,IER
      COMMON/GAUSTR/V1S2P(100),V2S2P(100),V2P2S(100),V2P2P1(100),V2P2P2(
     1 100),T1S2P(100),T2S2P(100),T2P2P1(100),T2P2P2(100),U2S2P(100),U2P
     2 2P1(100),U2P2P2(100),INDX1(35,35),INDX2(35,35),INVJ1I(100),INVJ1J
     3 (100),INVJ2I(100),INVJ2J(100),INVT1I(100),INVT1J(100),INVT2I(100)
     4 ,INVT2J(100),D(35,35),Y1(80,3,3),Y2(80,3,3)
      COMMON/PERTBL/EL(18),NAME(20)
      DIMENSION APAIRS(9,9),ATEMP(9,9),AS(80,80)
      DIMENSION MU(18),NC(18),LC(9),MC(9),E(3)
      DIMENSION P(80,80)
      EQUIVALENCE (P(1,1),Y(1,1,1))
      EQUIVALENCE (APAIRS(1,1),XX(1)),(ATEMP(1,1),XX(101)),
     1            (AS(1,1),BCOMPL(1,1))
      EXTERNAL FUNC
      COMPLEX*16 BCOMPL
      REAL*8 MU,NUM,K1,K2
      INTEGER AN,ULIM,ULK,ULL,CZ,U,CHARGE,ANL,ANK,OCCA,OCCB,EL
      INTEGER OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSSED,OPEN,CONTR,MONO,NEI
     1G
      N=0
      DO 60 I=1,NATOMS
      LLIM(I)=N+1
      K=1
      IF(AN(I).LT.11) GO TO 20
   10 N=N+9
      CZ(I)=AN(I)-10
      GO TO 50
   20 IF(AN(I).LT.3) GO TO 40
   30 N=N+4
      CZ(I)=AN(I)-2
      GO TO 50
   40 N=N+1
      CZ(I)=AN(I)
   50 CONTINUE
      ULIM(I)=N
   60 CONTINUE
C     FILL U ARRAY----U(J) IDENTIFIES THE ATOM TO WHICH ORBITAL J IS ATTACHED
C     E.G. ORBITAL32 ATTACHED TO ATOM7, ETC.
      DO 70 K=1,NATOMS
      LLK=LLIM(K)
      ULK=ULIM(K)
      LIM=ULK+1-LLK
      DO 70 I=1,LIM
        J=LLK+I-1
   70 U(J)=K
C     ASSIGNMENT OF ORBITAL EXPONENTS TO ATOMS BY SLATER RULES
      MU(2)=1.7D0
      MU(1)=1.2D0
      NC(1)=1
      NC(2)=1
      DO 80 I=3,10
        NC(I)=2
   80 MU(I)=0.325D0*DFLOAT(I-1)
      DO 90 I=11,18
        NC(I)=3 
   90 MU(I)=(0.65D0*DFLOAT(I)-4.95D0)/3.D0
      LC(1)=0
      LC(2)=1
      LC(3)=1
      LC(4)=1
      LC(5)=2
      LC(6)=2
      LC(7)=2
      LC(8)=2
      LC(9)=2
      MC(1)=0
      MC(2)=1
      MC(3)=-1
      MC(4)=0
      MC(5)=0
      MC(6)=1
      MC(7)=-1
      MC(8)=2
      MC(9)=-2
      BSIGMA=1.D0
      BPI=0.85D0
      DO 320 K=1,NATOMS
      DO 320 L=K,NATOMS
      DO 100 I=1,3
        C1(I)=C(K,I)
  100 C2(I)=C(L,I)
      CALL RELVEC(R,E,C1,C2)
      WRITE(6,350)
      LLK=LLIM(K)
      LLL=LLIM(L)
      ULK=ULIM(K)
      ULL=ULIM(L)
      NORBK=ULK-LLK+1
      NORBL=ULL-LLL+1
      ANK=AN(K)
      ANL=AN(L)
      DO 200 I=1,NORBK
      DO 200 J=1,NORBL
      IF(K.EQ.L) GO TO 160
      BCONST=BSIGMA
      IF((MC(I).EQ.0).OR.(MC(J).EQ.0)) GO TO 105    
      IF(MC(I).EQ.MC(J)) BCONST=BPI
  105 CONTINUE
  110 IF(MC(I).NE.MC(J)) GO TO 150
  120 IF(MC(I).LT.0) GO TO 140
  130 PAIRS(I,J)=DSQRT((MU(ANK)*R)**(2*NC(ANK)+1)*(MU(ANL)*R)**(2*NC(ANL
     1)+1)/(FACT(2*NC(ANK))*FACT(2*NC(ANL))))*(-1.D0)**(LC(J)+MC(J))
     2*SS(NC(ANK),LC(I),MC(I),NC(ANL),LC(J),MU(ANK)*R,MU(ANL)*R)
      APAIRS(I,J)=PAIRS(I,J)*BCONST
      GO TO 190
  140 PAIRS(I,J)=PAIRS(I-1,J-1)
      APAIRS(I,J)=APAIRS(I-1,J-1)
      GO TO 190
  150 PAIRS(I,J)=0.0D0
      APAIRS(I,J)=0.0D0
      GO TO 190
  160 IF(I.EQ.J) GO TO 170
  180 PAIRS(I,J)=0.0D0
      APAIRS(I,J)=0.0D0
      GO TO 190
  170 PAIRS(I,J)=1.0D0
      APAIRS(I,J)=1.0D0
  190 CONTINUE
  200 CONTINUE
      LCULK=LC(NORBK)
      LCULL=LC(NORBL)
      MAXL=MAX0(LCULK,LCULL)
      IF(R.GT.0.000001D0) GO TO 220
  210 GO TO 250
  220 CALL HARMTR(T,MAXL,E)
      DO 230 I=1,NORBK
        DO 230 J=1,NORBL
          TEMP(I,J)= 0.D0
          ATEMP(I,J)=0.0D0
          DO 230 KK=1,NORBL
            TEMP(I,J)=TEMP(I,J)+T(J,KK)*PAIRS(I,KK)
            ATEMP(I,J)=ATEMP(I,J)+T(J,KK)*APAIRS(I,KK)
  230 CONTINUE
      DO 240 I=1,NORBK
        DO 240 J=1,NORBL
          PAIRS(I,J)=0.0D0
          APAIRS(I,J)=0.0D0
          DO 240 KK=1,NORBK
            PAIRS(I,J)=PAIRS(I,J)+T(I,KK)*TEMP(KK,J)
            APAIRS(I,J)=APAIRS(I,J)+T(I,KK)*ATEMP(KK,J)
  240 CONTINUE
C     FILL S MATRIX
  250 CONTINUE
      DO 260 I=1,NORBK
        LLKP=LLK+I-1
        DO 260 J=1,NORBL
          LLLP=LLL+J-1
          S(LLKP,LLLP)=PAIRS(I,J)
          AS(LLKP,LLLP)=APAIRS(I,J)
  260 CONTINUE
      N1=NC(ANK)
      N2=NC(ANL)
      K1=MU(ANK)
      K2=MU(ANL)
      IF(K.NE.L) GO TO 290
  270 TERM1=FACT(2*N1-1)/((2.D0*K2)**(2*N1))
      TERM2=0.D0
      LIM=2*N1
      DO 280 J=1,LIM
        NN1=4*N1-J
        NUM=DFLOAT(J)*(2.D0*K1)**(2*N1-J)*FACT(NN1-1)
        NN2=2*N1-J
        DEN=FACT(NN2)*2.D0*DFLOAT(N1)*(2.D0*(K1+K2)**(4*N1-J))
        TERM2=TERM2+NUM/DEN
  280 CONTINUE
      GO TO 310
  290 TERM1=(R/2.D0)**(2*N2)*SS(0,0,0,2*N2-1,0,0.D0,2.D0*K2*R)
      TERM2=0.D0
      LIM=2*N1
      DO 300 J=1,LIM
  300    TERM2=TERM2+(DFLOAT(J)*(2.D0*K1)**(2*N1-J)*(R/2.D0)**(2*N1-
     1J+2*N2))/(FACT(2*N1-1)*2.D0*DFLOAT(N1))*SS(2*N1-J,0,0,2*N2-1,0,
     22.D0*K1*R,2.D0*K2*R)
  310 GAMMA(K,L)=((2.D0*K2)**(2*N2+1)/FACT(2*N2))*(TERM1-TERM2)
  320 CONTINUE
      DO 330 I=1,N
        DO 330 J=I,N
          AS(J,I)=AS(I,J)
  330 S(J,I)=S(I,J)
      DO 340 I=1,NATOMS
        DO 340 J=I,NATOMS
  340 GAMMA(J,I)=GAMMA(I,J)
      WRITE(6,350)
  350 FORMAT(1H1,1X,23HOVERLAP INTEGRAL MATRIX)
      CALL MATOUT(N,1)
      DO 360 I=1,NATOMS
        DO 360 J=1,NATOMS
  360      P(I,J)=GAMMA(I,J)
           WRITE(6,370)
  370 FORMAT(1X,23HCOULOMB INTEGRAL MATRIX)
      CALL MATOUT(NATOMS,2)
      DO 380 I=1,N
        DO 380 J=I,N
          S(I,J)=AS(I,J)
          S(J,I)=S(I,J)
  380 CONTINUE
      IF(CONTR.NE.NEIG)RETURN
      DO 32 I=1,NATOMS
        D(I,I)=0.D0
        DO 32 J=1,NATOMS
          INDX1(I,J)=0
          INDX2(I,J)=0
   32 CONTINUE
      DO 33 I=2,NATOMS
      DO 33 J=1,I-1
       D(I,J) = (C(I,1)-C(J,1))**2+(C(I,2)-C(J,2))**2+(C(I,3)-C(J,3))**2
       D(J,I)=D(I,J)
   33 CONTINUE
      C0=0.D0
      D0=1.D0
      E0=0.D0
      F0=1.D0
      INTJ1=0
      INTJ2=0
      DO 18 I=2,NATOMS
        IF(AN(I).LT.3) GO TO 19
      DO 21 J=1,I-1
        IF(AN(J).LT.3) GO TO 22
      DO 23 K=2,I
        IF(AN(K).LT.3) GO TO 23
      DO 7223 L=1,K-1
        IF((AN(I).NE.AN(K)).AND.(AN(I).NE.AN(L))) GO TO 7223
      IANDJ=AN(I)+AN(J)
      KANDL=AN(K)+AN(L)
      IF(IANDJ.NE.KANDL) GO TO 7223
        DIF=DABS(D(I,J)-D(K,L))
      IF(DIF.GT.0.000001D0) GO TO 7223
        INDX1(I,J)=INDX1(K,L)
      IF((I.EQ.K).AND.(J.EQ.L)) GO TO 24
        GO TO 21
 7223 CONTINUE
   23 CONTINUE
   24 INTJ1=INTJ1+1
      INDX1(I,J)=INTJ1
      INVJ1I(INTJ1)=I
      INVJ1J(INTJ1)=J
      GO TO 21
   22 CONTINUE
      DO 25 K=2,I
      DO 25 L=1,K-1 
      IF((AN(I).NE.AN(K)).AND.(AN(I).NE.AN(L))) GO TO 25
      IANDJ=AN(I)+AN(J)
      KANDL=AN(K)+AN(L)
      IF(IANDJ.NE.KANDL) GO TO 25
      DIF=DABS(D(I,J)-D(K,L))
      IF(DIF.GT.0.000001D0) GO TO 25
        INDX1(I,J)=INDX1(K,L)
      IF((I.EQ.K).AND.(J.EQ.L)) GO TO 26
      GO TO 21
   25 CONTINUE
   26 CONTINUE
      INTJ2=INTJ2+1
      INDX1(I,J)=INTJ2
      INVJ2I(INTJ2)=I
      INVJ2J(INTJ2)=J
   21 CONTINUE
      GO TO 18
   19 CONTINUE
      DO 27 J=1,I-1
        IF(AN(J).LT.3) GO TO 27
      DO 28 K=2,I
        DO 28 L=1,K-1 
          IF((AN(I).NE.AN(K)).AND.(AN(I).NE.AN(L))) GO TO 28
            IANDJ=AN(I)+AN(J)
            KANDL=AN(K)+AN(L)
          IF(IANDJ.NE.KANDL) GO TO 28
            DIF=DABS(D(I,J)-D(K,L))
            IF(DIF.GT.0.000001D0) GO TO 28
          INDX1(I,J)=INDX1(K,L)
          IF((I.EQ.K).AND.(J.EQ.L)) GO TO 29
   28 CONTINUE
   29 CONTINUE
      INTJ2=INTJ2+1
      INDX1(I,J)=INTJ2
      INVJ2I(INTJ2)=I
      INVJ2J(INTJ2)=J
   27 CONTINUE
   18 CONTINUE
      DO 520 I=1,INTJ2
        ASQ=D(INVJ2I(I),INVJ2J(I))
        ALPHA1=MU(AN(INVJ2I(I)))
        ALPHA2=MU(AN(INVJ2J(I)))
        ALPMUL=ALPHA1*ALPHA2
        YY0=DGASPD(FUNC,6,6,C0,D0,E0,F0,1,3,0,1,ASQ,ALPHA1,ALPHA2)
        V1S2P(I)=-0.125D0*ALPMUL**2.5*ALPHA2*YY0
  520 CONTINUE
      DO 530 I=1,INTJ1
        ASQ=D(INVJ1I(I),INVJ1J(I))
        ALPHA1=MU(AN(INVJ1I(I)))
        ALPHA2=MU(AN(INVJ1J(I)))
        ALPMUL=ALPHA1*ALPHA2
        YY0=DGASPD(FUNC,6,6,C0,D0,E0,F0,1,3,0,0,ASQ,ALPHA1,ALPHA2)
        YY1=DGASPD(FUNC,6,6,C0,D0,E0,F0,1,3,1,0,ASQ,ALPHA1,ALPHA2)
        YY2=DGASPD(FUNC,6,6,C0,D0,E0,F0,1,3,0,1,ASQ,ALPHA1,ALPHA2)
        YY3=DGASPD(FUNC,6,6,C0,D0,E0,F0,1,4,1,1,ASQ,ALPHA1,ALPHA2)
        V2S2P(I)=0.0721687837D0*ALPMUL**2.5*ALPHA2*
     1    (YY2-0.5D0*ALPHA1**2*YY3)
        V2P2S(I)=0.0721687837D0*ALPMUL**2.5*ALPHA1*
     1    (YY1-0.5D0*ALPHA2**2*YY3)
        V2P2P1(I)=0.125D0*ALPMUL**3.5*YY3
        V2P2P2(I)=-0.125D0*ALPMUL**3.5*YY0
  530 CONTINUE
      INTT1=0
      INTT2=0
      DO 11 I=1,NATOMS
        IF(AN(I).NE.6) GO TO 11
      DO 12 J=1,NATOMS
        IF(I.EQ.J) GO TO 12
        IF(AN(J).LT.3) GO TO 13
      DO 7214 K=1,I
        IF(AN(K).NE.6) GO TO 7214
      DO 14 L=1,NATOMS
        IF(AN(J).NE.AN(L)) GO TO 14
          DIF=DABS(D(I,J)-D(K,L))
          IF(DIF.GT.0.000001D0) GO TO 14
        INDX2(I,J)=INDX1(K,L)
      IF((I.EQ.K).AND.(J.EQ.L)) GO TO 15
        GO TO 12
   14 CONTINUE
 7214 CONTINUE
   15 CONTINUE
      INTT1=INTT1+1
      INDX2(I,J)=INTT1
      INVT1I(INTT1)=I
      INVT1J(INTT1)=J
      GO TO 12
   13 CONTINUE
      DO 16 K=1,I
        IF(AN(K).NE.6) GO TO 7216
      DO 16 L=1,NATOMS
        IF(AN(L).GT.2) GO TO 16
          DIF=DABS(D(I,J)-D(K,L))
          IF(DIF.GT.0.000001D0) GO TO 16
        INDX2(I,J)=INDX1(K,L)
      IF((I.EQ.K).AND.(J.EQ.L)) GO TO 17
        GO TO 12
   16 CONTINUE
 7216 CONTINUE
   17 CONTINUE
      INTT2=INTT2+1
      INDX2(I,J)=INTT2
      INVT2I(INTT2)=I
      INVT2J(INTT2)=J
   12 CONTINUE
   11 CONTINUE
      IND=2
      M1=4
      M2=4
      IF(INTT2.EQ.0) GO TO 498
      DO 500 I=1,INTT2
        ASQ=D(INVT2I(I),INVT2J(I))
        ALPHA1=MU(AN(INVT2J(I)))
        ALPHA2=MU(6)
        ALPMUL=ALPHA1*ALPHA2
        YY0=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,1,-2,1,ASQ,ALPHA1,ALPHA2)
        T1S2P(I)=0.1591549431D0*ALPMUL**2.5*ALPHA2*ASQ*YY0
  500 CONTINUE
  498 CONTINUE
      IF(INTT1.EQ.0) GO TO 499
      DO 510 I=1,INTT1
        ASQ=D(INVT1I(I),INVT1J(I))
        ALPHA1=MU(AN(INVT1J(I)))
        ALPHA2=MU(6)
        ALPMUL=ALPHA1*ALPHA2
        YY0=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,1,-2,1,ASQ,ALPHA1,ALPHA2)
        YY1=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,2,-3,1,ASQ,ALPHA1,ALPHA2)
        YY2=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,3,-4,1,ASQ,ALPHA1,ALPHA2)
        YY3=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,3,-5,2,ASQ,ALPHA1,ALPHA2)
        T2S2P(I)=-0.09188814924D0*ALPMUL**2.5*ALPHA2*ASQ*(YY0-0.5D0*
     1   ALPHA1**2*ASQ*YY1)
        T2P2P1(I)=0.3183098862D0*ALPMUL**3.5*ASQ*(YY1-0.125D0*ASQ*
     1   (ALPHA1**2*YY2+ALPHA2**2*YY3))
        T2P2P2(I)=0.07957747155D0*ALPMUL**3.5*ASQ**2*YY1
        YY0=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,1,1,0,ASQ,ALPHA1,ALPHA1)
        YY1=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,2,1,1,ASQ,ALPHA1,ALPHA1)
        YY2=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,2,1,0,ASQ,ALPHA1,ALPHA1)
        YY3=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,3,2,0,ASQ,ALPHA1,ALPHA1)
        YY4=DGASPD(FUNC,M1,M2,C0,D0,E0,F0,IND,3,1,1,ASQ,ALPHA1,ALPHA1)
        U2S2P(I)=-0.09188814924D0*ALPHA1**6*ASQ*(YY0-0.5D0*ALPHA1**2*
     1   ASQ*YY1)
        U2P2P1(I)=0.3183098862D0*ALPHA1**7*ASQ*(YY2-0.125D0*ASQ*
     1   ALPHA1**2*(YY3+YY4))
        U2P2P2(I)=0.07957747155D0*ALPHA1**7*ASQ**2*YY1
  510 CONTINUE
  499 CONTINUE
      RETURN
      END



      SUBROUTINE DHQ4(M,IPARAM)
      IMPLICIT REAL*8 (A-H,O-Z)
      REAL*4 R,YY
      COMPLEX*16 A,LAMBDA,MULT,H,SFT(2),SHIFT,TEMP,TEMP1,TEMP2,ASIN,ACOS
     1 ,BSIN,BCOS,ASUM,AMUL,ZN
      COMMON/EORK/MULT(80),H(160,80),LAMBDA(80),INT(160) 
      COMMON/COMP/A(80,80),BGAUSS,IER
      INTEGER IX*2
      EQUIVALENCE(R,IX)
      IER=0
      N=M
      IF(N.NE.1) GO TO 1
        LAMBDA(1)=A(1,1)
        A(1,1)=(1.D0,0.D0)
        RETURN
    1 ICOUNT=0
      N1=N-1
      NCAL=N
      SHIFT=(0.D0,0.D0)
      IF(N.NE.2) GO TO 4
    2 ASUM=A(1,1)+A(2,2)
      AMUL=A(1,1)*A(2,2)-A(1,2)*A(2,1)
      TEMP=(ASUM+CDSQRT(ASUM*ASUM-4.D0*AMUL))*0.5D0
      IF((DREAL(TEMP).NE.0.D0).OR.(DIMAG(TEMP).NE.0.D0)) GO TO 3
        LAMBDA(M)=SHIFT
        LAMBDA(M-1)=ASUM+SHIFT
      GO TO 37
    4 DO 15 K=1,N-2
      K1=K+1
      K2=K+2
      ABIG=0.D0
      INT(K)=K1
      DO 5 I=K1,N
        ABSSQ=DREAL(A(I,K))**2+DIMAG(A(I,K))**2
        IF(ABSSQ.LE.ABIG) GO TO 5 
          INT(K)=I
          ABIG=ABSSQ
    5 CONTINUE
      INTER=INT(K)
      IF(ABIG.EQ.0.D0) GO TO 15
      IF(INTER.EQ.K1) GO TO 8
        DO 6 J=K,N
          TEMP=A(K1,J)
          A(K1,J)=A(INTER,J)
          A(INTER,J)=TEMP
    6 CONTINUE
      DO 7 I=1,N
        TEMP=A(I,K1)
        A(I,K1)=A(I,INTER)
        A(I,INTER)=TEMP
    7 CONTINUE
    8 ZN=1.D0/A(K1,K)
      DO 9 I=K2,N
        MULT(I)=A(I,K)*ZN
        A(I,K)=MULT(I)
    9 CONTINUE
      DO 11 J=K2,N
        DO 10 I=1,K1
          A(I,K1)=A(I,K1)+A(I,J)*MULT(J)
   10 CONTINUE
   11 CONTINUE
      DO 13 J=K2,N
        DO 12 I=K2,N
          A(I,K1)=A(I,K1)+A(I,J)*MULT(J)
   12 CONTINUE
   13 CONTINUE
      DO 60 I=K2,N
        A(I,K1)=A(I,K1)-MULT(I)*A(K1,K1)
   60 CONTINUE
      DO 14 J=K2,N
        DO 14 I=K2,N
          A(I,J)=A(I,J)-MULT(I)*A(K1,J)
   14 CONTINUE
   15 CONTINUE
      EPS=0.D0
      DO 16 J=1,N
        EPS=EPS+CDABS(A(1,J)) 
   16 CONTINUE
      DO 18 I=2,N
        SUM=0.D0
        I1=I-1
        DO 17 J=I1,N
          SUM=SUM+CDABS(A(I,J))
   17 CONTINUE
      IF(SUM.GT.EPS) EPS=SUM
   18 CONTINUE
C     E=SQRT(FLOAT(N))
      YY=FLOAT(N)
      R=YY
      IX=(IX+16640)/2
      R=(YY/(YY/R+R)*0.5+(YY/R+R)*0.5)*0.5
      R=(YY/(YY/R+R)*0.5+(YY/R+R)*0.5)*0.5
      E=(YY/(YY/R+R)*0.5+(YY/R+R)*0.5)*0.5
      IF(EPS.EQ.0.D0) EPS=1.D-12
      EPS=E*EPS*1.D-12
      IF(IPARAM.EQ.0) GO TO 20
      DO 19 J=1,N
        DO 19 I=1,N
          H(N+I,J)=A(I,J)
   19 CONTINUE
   20 IF(N.NE.1) GO TO 21
      LAMBDA(M)=A(1,1)+SHIFT
      GO TO 37
   21 IF(N.EQ.2) GO TO 2
   22 IF((DREAL(A(N,N)).EQ.0.D0).AND.(DIMAG(A(N,N)).EQ.0.D0)) GO TO 23
      TEMP=A(N,N1)/A(N,N)
      IF(DABS(DREAL(TEMP))+DABS(DIMAG(TEMP))-1.D-9) 24,24,23
   23 IF(DABS(DREAL(A(N,N1)))+DABS(DIMAG(A(N,N1))).GE.EPS) GO TO 25    
   24 LAMBDA(M-N+1)=A(N,N)+SHIFT
      ICOUNT=0
      N=N-1
      N1=N-1
      GO TO 21
   25 ASUM=A(N1,N1)+A(N,N)
      AMUL=A(N1,N1)*A(N,N)-A(N1,N)*A(N,N1)
      TEMP=ASUM*ASUM-4.D0*AMUL
      SFT(1)=(ASUM+CDSQRT(TEMP))*0.5D0
      SFT(2)=AMUL/SFT(1)
      IF(DREAL(SFT(1)).EQ.0.D0 .AND. DIMAG(SFT(1)).EQ.0.D0) SFT(2)=ASUM
      TEMP1=SFT(1)-A(N,N)
      TEMP2=SFT(2)-A(N,N)
      INDEX=1
      IF(CDABS(TEMP1).GE.CDABS(TEMP2)) INDEX=2
      IF(CDABS(A(N1,N-2)).GE.EPS) GO TO 30
      LAMBDA(M-N+1)=SFT(1)+SHIFT
      LAMBDA(M-N+2)=SFT(2)+SHIFT
      ICOUNT=0
      N=N-2
      N1=N-1
      GO TO 20
   30 SHIFT=SHIFT+SFT(INDEX)
      DO 31 I=1,N
        A(I,I)=A(I,I)-SFT(INDEX)
   31 CONTINUE
C
      IF(ICOUNT.LE.10) GO TO 32
        NCAL=M-N
        IER=1
      GO TO 37
   32 DO 36 K=1,N1
      K1=K+1
      K2=K+2
      TEMP1=A(K,K)
      TEMP2=A(K1,K)
      ROOT=DSQRT(DREAL(TEMP1)**2+DIMAG(TEMP1)**2+DREAL(TEMP2)**2
     1 +DIMAG(TEMP2)**2)
      IF(ROOT.EQ.0.D0) GO TO 36
      ACOS=TEMP1/ROOT
      ASIN=TEMP2/ROOT
      BCOS=DCONJG(ACOS)
      BSIN=DCONJG(ASIN)
      INDEX=MAX0(K-1,1)
      DO 33 J=INDEX,N
        TEMP=A(K,J)
        A(K,J)=BCOS*A(K,J)+BSIN*A(K1,J)
        A(K1,J)=-ASIN*TEMP+ACOS*A(K1,J)
   33 CONTINUE
      DO 34 I=1,K
        TEMP=A(I,K)
        A(I,K)=ACOS*A(I,K)+ASIN*A(I,K1)
        A(I,K1)=-BSIN*TEMP+BCOS*A(I,K1)
   34 CONTINUE   
      INDEX=MIN0(K2,N)
      DO 35 I=1,INDEX
        A(I,K)=ASIN*A(I,K1)
        A(I,K1)=BCOS*A(I,K1)
   35 CONTINUE
   36 CONTINUE
      ICOUNT=ICOUNT+1
      GO TO 22
    3 LAMBDA(M)=TEMP+SHIFT
      LAMBDA(M-1)=AMUL/TEMP+SHIFT
   37 IF(NCAL.EQ.0) GO TO 59
      IF(IPARAM.EQ.0) RETURN
        N=M
        N1=N-1
        IF(N.NE.2) GO TO 38
          EPS=DMAX1(CDABS(LAMBDA(1)),CDABS(LAMBDA(2)))*1.D-8
          IF(EPS.EQ.0.D0) EPS=1.D-12
      H(3,1)=A(1,1)
      H(3,2)=A(1,2)
      H(4,1)=A(2,1)
      H(4,2)=A(2,2)
   38 DO 57 K=1,NCAL
      DO 40 J=1,N
      DO 39 I=1,N
        H(I,J)=H(N+I,J)
   39 CONTINUE
   40 CONTINUE
      DO 61 I=1,N
        H(I,I)=H(I,I)-LAMBDA(K)
   61 CONTINUE
      DO 44 I=1,N1
        NI=N+I
        I1=I+1
        MULT(I)=(0.D0,0.D0)
        INT(NI)=0
        IF(CDABS(H(I1,1)).LE.CDABS(H(I,I))) GO TO 42
          INT(NI)=1
        DO 41 J=I,N
          TEMP=H(I,J)
          H(I,J)=H(I1,J)
          H(I1,J)=TEMP
   41 CONTINUE
   42 IF((DREAL(H(I,I)).EQ.0.D0).AND.(DIMAG(H(I,I)).EQ.0.D0)) GO TO 44
      MULT(I)=-H(I1,I)/H(I,I)
      DO 43 J=I1,N
        H(I1,J)=H(I1,J)+MULT(I)*H(I,J)
   43 CONTINUE
   44 CONTINUE
C       START INVERSR ITERATION
      DO 45 I=1,N
      IF(DREAL(H(I,I)).EQ.0.D0 .AND. DIMAG(H(I,I)).EQ.0.D0)
     1  H(I,I)=DCMPLX(EPS,0.D0)
        A(I,K)=(1.D0,0.D0)
   45 CONTINUE
      IIII=0
   46 CONTINUE
      IIII=IIII+1
      A(N,K)=A(N,K)/H(N,N)
      DO 48 I=1,N1
        NI=N-I
      DO 47 J=NI,N1
        J1=J+1
        A(NI,K)=A(NI,K)-H(NI,J1)*A(J1,K)
   47 CONTINUE
      A(NI,K)=A(NI,K)/H(NI,NI)
   48 CONTINUE
      IF(IIII.EQ.3) GO TO 52
      BIG=0.D0
      DO 49 I=1,N
        SUM=DABS(DREAL(A(I,K)))+ DABS(DIMAG(A(I,K)))  
      IF(BIG.LT.SUM) BIG=SUM
   49 CONTINUE
      ZN=1.D0/BIG
      DO 50 I=1,N
        A(I,K)=A(I,K)*ZN
   50 CONTINUE
      DO 51 I=1,N1
        NI=N+I
        I1=I+1
        IF(INT(NI).EQ.0) GO TO 51
          TEMP=A(I,K)
          A(I,K)=A(I1,K)
          A(I1,K)=TEMP
   51 A(I1,K)=A(I1,K)+MULT(I)*A(I,K)
      GO TO 46
C       TRANSFORM EIGENVECTORS
   52 IF(N.EQ.2) GO TO 55
      N2=N-2
      DO 54 J=1,N2
        NP=N-J+1
        NM=N-J-1
        NM1=NM+1
        DO 53 I=NP,N
          NI=N+I
          A(I,K)=A(I,K)+H(NI,NM)*A(NM1,K)
   53 CONTINUE
      INDEX=INT(NM)
      TEMP=A(NM1,K)
      A(NM1,K)=A(INDEX,K)
      A(INDEX,K)=TEMP
   54 CONTINUE
   55 CONTINUE
C       NORMALIZE
      SUM=0.D0
      DO 70 I=1,N
   70 SUM=SUM+CDABS(A(I,K))**2
      DO 71 I=1,N
   71 A(I,K)=A(I,K)/DSQRT(SUM)
   57 CONTINUE
      IF(IER.EQ.0) RETURN
      NCAL1=NCAL+1
      DO 58 K=NCAL1,N
      DO 58 I=1,N
        A(I,K)=(0.D0,0.D0)
   58 CONTINUE
      RETURN
   59 IER=2
      RETURN
      END



      SUBROUTINE EIGOUT(M,K)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/GAB/XXX(240),EPSILN(80),YYY(1680)
      WRITE(6,10) (EPSILN(I),I=M,K)
   10 FORMAT(//,15H EIGENVALUES   ,5(7X,F9.5,7X),//)
      RETURN
      END



      SUBROUTINE SCFOUT(OP)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMPLEX*16 A
      COMMON/INFO/NATOMS,CHARGE,MULTIP,AN(35),C(35,3),N
      COMMON/INFO1/CZ(35),U(80),ULIM(35),LLIM(35),NELECS,OCCA,OCCB
      COMMON/ORB/ORB(9)
      COMMON/PERTBL/EL(18),NAME(20)
      COMMON/COMP/A(80,80),BGAUSS,IER   
      COMMON/GAB/XXX(2000)
      INTEGER OP,AN,ANII,CZ,U,ORB,ULIM,EL,CHARGE,OCCA,OCCB
      DO 120 M=1,N,5
        K=M+4
        IF(K.LE.N) GO TO 30
   20     K=N
   30 CONTINUE
      WRITE(6,100)
      IF(OP.EQ.1) GO TO 40
        GO TO 50
   40 CALL EIGOUT(M,K)
   50 CONTINUE
      WRITE(6,60) (I,I=M,K)
   60 FORMAT(1H ,13X,5(9X,I2,12X),//)
      DO 110 I=1,N
        II=U(I)
        ANII=AN(II)
        L=I-LLIM(II)+1
   70 WRITE(6,80) I,II,EL(ANII),ORB(L),(A(I,J),J=M,K)
   80 FORMAT(1H ,I3,I3,2A4,5('(',F9.5,',',F9.5,')',2X))
      IF(I.EQ.ULIM(II)) GO TO 90
        GO TO 110
   90 WRITE(6,100)
  100 FORMAT(1X)
  110 CONTINUE
  120 CONTINUE
      WRITE(6,100)
      WRITE(6,100)
      RETURN
      END



      SUBROUTINE MATOUT(N,MATOP)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ARRAYS/A(80,80,3)
      DO 80 M=1,N,11
        K=M+10
        IF(K.LE.N) GO TO 30
   20     K=N
   30 CONTINUE
      WRITE(6,40) (J,J=M,K)
   40 FORMAT(//,7X,11(4X,I2,3X),//)
      DO 60 I=1,N
        WRITE(6,50) I,(A(I,J,MATOP),J=M,K)
   50 FORMAT(1X,I2,4X,50(F9.4))
   60 CONTINUE
      WRITE(6,70)
   70 FORMAT(//)
   80 CONTINUE
      RETURN
      END



      SUBROUTINE YPRINT(M,N)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/GAUSTR/V1S2P(100),V2S2P(100),V2P2S(100),V2P2P1(100),V2P2P2(
     1 100),T1S2P(100),T2S2P(100),T2P2P1(100),T2P2P2(100),U2S2P(100),U2P
     2 2P1(100),U2P2P2(100),INDX1(35,35),INDX2(35,35),INVJ1I(100),INVJ1J
     3 (100),INVJ2I(100),INVJ2J(100),INVT1I(100),INVT1J(100),INVT2I(100)
     4 ,INVT2J(100),DXX(35,35),Y1(80,3,3),Y2(80,3,3)
      WRITE(6,1)
    1 FORMAT(1H0,8X,'Y1',/)
      J=0
    5 CONTINUE
      N1=1+10*J
      N2=N1+9
      IF(N.LE.N2) N2=N
      WRITE(6,2) (I,I=N1,N2)
    2 FORMAT(1H0,14X,10(I2,8X))
      DO 3 L=1,3
        WRITE(6,4)(Y1(I,L,M),I=N1,N2)
    4 FORMAT(1H ,10X,10F10.6)
    3 CONTINUE
      IF(N2.EQ.N) GO TO 6
        J=J+1
        GO TO 5
    6 CONTINUE
      WRITE(6,7)
    7 FORMAT(1H0,8X,'Y2',/)
      J=0
   12 CONTINUE
      N1=1+10*J
      N2=N1+9
      IF(N.LE.N2) N2=N
        WRITE(6,8) (I,I=N1,N2)
    8 FORMAT(1H0,14X,10(I2,8X))
      DO 9 L=1,3
        WRITE(6,10)(Y2(I,L,M),I=N1,N2)
   10 FORMAT(1H ,10X,10F10.6)
    9 CONTINUE
      IF(N2.EQ.N) GO TO 11
        J=J+1
        GO TO 12
   11 CONTINUE
      RETURN
      END

      SUBROUTINE CHSFT(LLL)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ARRAYS/A(80,80),B(80,80),D(80,80)
      COMMON/GAB/XXX(400),G(35,35),Q(80),YYY(80),ENERGY,XXY(214)
      COMMON/INFO/NATOMS,CHARGE,MULTIP,AN(35),C(35,3),N
      COMMON/INFO1/CZ(35),U(80),ULIM(35),LLIM(35),NELECS,OCCA,OCCB
      COMMON/PERTBL/EL(18),NAME(20)
      COMMON/OPTION/OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MON
     1O,NEIG
      COMMON/COMP/BCOMPL(80,80),BGAUSS,IER
      COMMON/EORK/WORK1(80),WORK2(12800),LAMBDA(80),IWORK(160)
      COMMON/IMAG/AIMAGE(80,80),BIMAGE(80,80),XIMAG(80)
      COMMON/GAUSTR/V1S2P(100),V2S2P(100),V2P2S(100),V2P2P1(100),V2P2P2(
     1 100),T1S2P(100),T2S2P(100),T2P2P1(100),T2P2P2(100),U2S2P(100),U2P
     2 2P1(100),U2P2P2(100),INDX1(35,35),INDX2(35,35),INVJ1I(100),INVJ1J
     3 (100),INVJ2I(100),INVJ2J(100),INVT1I(100),INVT1J(100),INVT2I(100)
     4 ,INVT2J(100),DXX(35,35),Y1(80,3,3),Y2(80,3,3)
      DIMENSION DIAMAG(20),PARAMG(20),CTOTAL(20)
      DIMENSION TENSOR(3,3,20),EIGVAL(3),EIGVEC(3,3)
      COMPLEX*16 BCOMPL
      COMPLEX*16 WORK1,WORK2,LAMBDA
      INTEGER OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MONO,NEIG
      INTEGER CHARGE,AN,U,ULIM,EL,OCCA,OCCB,UL,CZ,ANI
      IF(IER.EQ.0) GO TO 1
        WRITE(6,2) IER
    2 FORMAT(1H0,5X,' THE RESULT IS NOT OBTAINED.',5X,'IER =',I2)
      RETURN
    1 CONTINUE
      WRITE(6,10)
   10 FORMAT(1H0,15H DENSITY MATRIX)
      CALL SCFOUT(0)
      IF(LLL.NE.1) GO TO 1000
      DO 40 I=1,NATOMS
        TCHG=0.D0
        LL=LLIM(I)
        UL=ULIM(I)
        DO 50 J=LL,UL
   50     TCHG=TCHG+B(J,J)
          XXY(I)=TCHG
   40 CONTINUE
      IF(BGAUSS.GT.0.01D0) GO TO 1000
        LLL=4
        GO TO 1001
 1000 CONTINUE
      NCARBN=0
      ACONST=1.251695D7/BGAUSS
      DO 600 II=1,NATOMS
        IF(AN(II).EQ. 5) GO TO 9600
        IF(AN(II).EQ. 6) GO TO 9600
        IF(AN(II).EQ. 7) GO TO 9600
        IF(AN(II).EQ. 8) GO TO 9600
        IF(AN(II).EQ. 9) GO TO 9600
      GO TO 600
 9600 CONTINUE
      NCARBN=NCARBN+1
      Y1T1=0.D0
      Y1T2=0.D0
      Y1T3=0.D0
      Y2T1=0.D0
      Y2T2=0.D0
      Y2T3=0.D0
      I0=LLIM(II)
      WRITE(6,610) II
  610 FORMAT(1H0,5X,'CENTERED ON ATOM-',I2,/)
      IF(AN(II).EQ. 5)CONST=0.512D0*ACONST
      IF(AN(II).EQ. 6)CONST=ACONST
      IF(AN(II).EQ. 7)CONST=1.728D0*ACONST
      IF(AN(II).EQ. 8)CONST=2.744D0*ACONST
      IF(AN(II).EQ. 9)CONST=4.096D0*ACONST
      DO 680 K=1,3
      DO 680 J=1,3
      DO 680 I=1,N
      Y1(I,J,K)=0.D0
      Y2(I,J,K)=0.D0
  680 CONTINUE
      DO 620 JJ=1,NATOMS
      IF(CONTR.EQ.MONO) GO TO 9999
        J0=LLIM(JJ)
        C1=C(JJ,1)-C(II,1)
        C2=C(JJ,2)-C(II,2)
        C3=C(JJ,3)-C(II,3)
        INDEX=INDX2(II,JJ)
        IF(AN(JJ).GT.2) GO TO 640
          Y2(J0,2,1)= CONST*C3*T1S2P(INDEX)*BIMAGE(J0,I0+2)
          Y2(J0,3,1)=-CONST*C2*T1S2P(INDEX)*BIMAGE(J0,I0+3)
          Y2(J0,1,2)=-CONST*C3*T1S2P(INDEX)*BIMAGE(J0,I0+1)
          Y2(J0,3,2)= CONST*C1*T1S2P(INDEX)*BIMAGE(J0,I0+3)
          Y2(J0,1,3)= CONST*C2*T1S2P(INDEX)*BIMAGE(J0,I0+1)
          Y2(J0,2,3)=-CONST*C1*T1S2P(INDEX)*BIMAGE(J0,I0+2)
          Y2T1=Y2T1+Y2(J0,2,1)+Y2(J0,3,1)
          Y2T2=Y2T2+Y2(J0,1,2)+Y2(J0,3,2)
          Y2T3=Y2T3+Y2(J0,1,3)+Y2(J0,2,3)
          GO TO 620
  640 CONTINUE
      IF(II.EQ.JJ) GO TO 630
      Y2(J0,2,1)= CONST*C3*T2S2P(INDEX)*BIMAGE(J0,I0+2)
      Y2(J0,3,1)=-CONST*C2*T2S2P(INDEX)*BIMAGE(J0,I0+3)
      Y2(J0,1,2)=-CONST*C3*T2S2P(INDEX)*BIMAGE(J0,I0+1)
      Y2(J0,3,2)= CONST*C1*T2S2P(INDEX)*BIMAGE(J0,I0+3)
      Y2(J0,1,3)= CONST*C2*T2S2P(INDEX)*BIMAGE(J0,I0+1)
      Y2(J0,2,3)=-CONST*C1*T2S2P(INDEX)*BIMAGE(J0,I0+2)
      Y2(J0+1,2,1)= CONST*C1*C3*T2P2P1(INDEX)*BIMAGE(J0+1,I0+2)
      Y2(J0+1,3,1)=-CONST*C1*C2*T2P2P1(INDEX)*BIMAGE(J0+1,I0+3)
      Y2(J0+2,1,2)=-CONST*C2*C3*T2P2P1(INDEX)*BIMAGE(J0+2,I0+1)
      Y2(J0+2,3,2)= CONST*C1*C2*T2P2P1(INDEX)*BIMAGE(J0+2,I0+3)
      Y2(J0+3,1,3)= CONST*C2*C3*T2P2P1(INDEX)*BIMAGE(J0+3,I0+1)
      Y2(J0+3,2,3)=-CONST*C1*C3*T2P2P1(INDEX)*BIMAGE(J0+3,I0+2)
      Y2(J0+3,2,1)= CONST*(C3**2*T2P2P1(INDEX)+T2P2P2(INDEX))*BIMAGE
     1 (J0+3,I0+2)
      Y2(J0+2,3,1)=-CONST*(C2**2*T2P2P1(INDEX)+T2P2P2(INDEX))*BIMAGE
     1 (J0+2,I0+3)
      Y2(J0+3,1,2)=-CONST*(C3**2*T2P2P1(INDEX)+T2P2P2(INDEX))*BIMAGE
     1 (J0+3,I0+1)
      Y2(J0+1,3,2)= CONST*(C1**2*T2P2P1(INDEX)+T2P2P2(INDEX))*BIMAGE
     1 (J0+1,I0+3)
      Y2(J0+2,1,3)= CONST*(C2**2*T2P2P1(INDEX)+T2P2P2(INDEX))*BIMAGE
     1 (J0+2,I0+1)
      Y2(J0+1,2,3)=-CONST*(C1**2*T2P2P1(INDEX)+T2P2P2(INDEX))*BIMAGE
     1 (J0+1,I0+2)
      Y1(J0,2,1)= CONST*C3*U2S2P(INDEX)*BIMAGE(J0,I0+2)
      Y1(J0,3,1)=-CONST*C2*U2S2P(INDEX)*BIMAGE(J0,I0+3)
      Y1(J0,1,2)=-CONST*C3*U2S2P(INDEX)*BIMAGE(J0,I0+1)
      Y1(J0,3,2)= CONST*C1*U2S2P(INDEX)*BIMAGE(J0,I0+3)
      Y1(J0,1,3)= CONST*C2*U2S2P(INDEX)*BIMAGE(J0,I0+1)
      Y1(J0,2,3)=-CONST*C1*U2S2P(INDEX)*BIMAGE(J0,I0+2)
      Y1(J0+1,2,1)= CONST*C1*C3*U2P2P1(INDEX)*BIMAGE(J0+1,I0+2)
      Y1(J0+1,3,1)=-CONST*C1*C2*U2P2P1(INDEX)*BIMAGE(J0+1,I0+3)
      Y1(J0+2,1,2)=-CONST*C2*C3*U2P2P1(INDEX)*BIMAGE(J0+2,I0+1)
      Y1(J0+2,3,2)= CONST*C1*C2*U2P2P1(INDEX)*BIMAGE(J0+2,I0+3)
      Y1(J0+3,1,3)= CONST*C2*C3*U2P2P1(INDEX)*BIMAGE(J0+3,I0+1)
      Y1(J0+3,2,3)=-CONST*C1*C3*U2P2P1(INDEX)*BIMAGE(J0+3,I0+2)
      Y1(J0+3,2,1)= CONST*((C2**2+C3**2)*U2P2P1(INDEX)+U2P2P2(INDEX))*
     1 BIMAGE(J0+3,J0+2)
      Y1(J0+3,1,2)=-CONST*((C1**2+C3**2)*U2P2P1(INDEX)+U2P2P2(INDEX))*
     1 BIMAGE(J0+3,J0+1)
      Y1(J0+2,1,3)= CONST*((C2**2+C3**2)*U2P2P1(INDEX)+U2P2P2(INDEX))*
     1 BIMAGE(J0+2,J0+1)
      Y1(J0+2,1,1)=Y1(J0+1,2,1)
      Y1(J0+2,3,1)=Y1(J0+3,2,1)
      Y1(J0+3,1,1)=Y1(J0+1,3,1)
      Y1(J0+1,2,2)=Y1(J0+2,1,2)
      Y1(J0+1,3,2)=Y1(J0+3,1,2)
      Y1(J0+3,2,2)=Y1(J0+2,3,2)
      Y1(J0+1,2,3)=Y1(J0+2,1,3)
      Y1(J0+1,3,3)=Y1(J0+3,1,3)
      Y1(J0+2,3,3)=Y1(J0+3,2,3)
      Y1T1=Y1T1+Y1(J0,2,1)+Y1(J0,3,1)
      Y1T2=Y1T2+Y1(J0,1,2)+Y1(J0,3,2)
      Y1T3=Y1T3+Y1(J0,1,3)+Y1(J0,2,3)
      DO 690 K1=1,4
        K=J0+K1-1
        DO 690 L=1,3
          Y2T1=Y2T1+Y2(K,L,1)
          Y2T2=Y2T2+Y2(K,L,2)
          Y2T3=Y2T3+Y2(K,L,3)
          Y1T1=Y1T1+Y1(K,L,1)
          Y1T2=Y1T2+Y1(K,L,2)
          Y1T3=Y1T3+Y1(K,L,3)
  690 CONTINUE
      GO TO 620        
  630 CONTINUE
 9999 CONTINUE
      Y1(I0+3,2,1)=1.430339D0*CONST*BIMAGE(I0+3,I0+2)
      Y1(I0+2,3,1)=Y1(I0+3,2,1)
      Y1(I0+1,3,2)=1.430339D0*CONST*BIMAGE(I0+1,I0+3)
      Y1(I0+3,1,2)=Y1(I0+1,3,2)
      Y1(I0+2,1,3)=1.430339D0*CONST*BIMAGE(I0+2,I0+1)
      Y1(I0+1,2,3)=Y1(I0+2,1,3)
      Y0T1=2.D0*Y1(I0+3,2,1)
      Y0T2=2.D0*Y1(I0+1,3,2)
      Y0T3=2.D0*Y1(I0+2,1,3)
  620 CONTINUE
      Y2T1=2.D0*Y2T1
      Y2T2=2.D0*Y2T2
      Y2T3=2.D0*Y2T3
C
      WRITE(6,650) LLL
  650 FORMAT(1H0,10X,'*** X COMPONENT ***    (LLL=',I2,')',/)
      CALL YPRINT(1,N)
      WRITE(6,655) Y0T1,Y1T1,Y2T1
  655 FORMAT(1H0,10X,'Y0=',F10.2,'Y1=',F10.2,'Y2=',F10.2)
      WRITE(6,660) LLL   
  660 FORMAT(1H0,10X,'*** Y COMPONENT ***    (LLL=',I2,')',/)                 
      CALL YPRINT(2,N)
      WRITE(6,655) Y0T2,Y1T2,Y2T2
      WRITE(6,670) LLL   
  670 FORMAT(1H0,10X,'*** Z COMPONENT ***    (LLL=',I2,')',/)                 
      CALL YPRINT(3,N)
      WRITE(6,655) Y0T3,Y1T3,Y2T3
C      TENSOR(1,LLL,NCARBN)=Y0T1+Y1T1+Y2T1
C      TENSOR(2,LLL,NCARBN)=Y0T2+Y1T2+Y2T2
C      TENSOR(3,LLL,NCARBN)=Y0T3+Y1T3+Y2T3
  600 CONTINUE
      IF(LLL.LE.2) RETURN
        DO 1001 I=1,LLL
          DO 1001 J=1,NCARBN
          TENSOR(1,I,J)=Y0T1+Y1T1+Y2T1
          TENSOR(2,I,J)=Y0T2+Y1T2+Y2T2
          TENSOR(3,I,J)=Y0T3+Y1T3+Y2T3
 1001 CONTINUE
      DO 1002 I=1,NATOMS
        ANI=AN(I)
        WRITE(6,1003) I,EL(ANI),XXY(I)
 1003 FORMAT(1H0,I3,A4,8X,F7.4)
 1002 CONTINUE
      IF(BGAUSS.LT.0.01D0) RETURN
        WRITE(6,80)
   80 FORMAT(1H1,'NUCLEAR SHIELDING (USING THE FPT METHOD)',/)
      WRITE(6,90) (NAME(I),I=1,19)
   90 FORMAT(1H ,19A4)
      WRITE(6,100)
  100 FORMAT(1H ,4X,'PARAMAGNETIC SHIELDING TENSOR'/)
      DO 200 I=1,NCARBN
        WRITE(6,210) I
  210 FORMAT(1H0,10X,'ATOM-' I2,/)
      WRITE(6,220)
  220 FORMAT(1H ,14X,'X',9X,'Y',9X,'Z',/)
      WRITE(6,230) (TENSOR(J,1,I),J=1,3)
  230 FORMAT(1H, 7X,'X',3(2X,F8.2))
      WRITE(6,240) (TENSOR(J,2,I),J=1,3)
  240 FORMAT(1H, 7X,'Y',3(2X,F8.2))
      WRITE(6,250) (TENSOR(J,3,I),J=1,3)
  250 FORMAT(1H, 7X,'Z',3(2X,F8.2))
      PARAMG(I)=0.D0
      DO 260 J=1,3
  260 PARAMG(I)=PARAMG(I)+TENSOR(J,J,I)
      PARAMG(I)=PARAMG(I)/3.D0
      DO 270 J=1,3
        DO 270 K=1,3
          BCOMPL(J,K)=DCMPLX(TENSOR(K,J,I),0.D0)
  270 CONTINUE
      CALL DHQ4(3,1)
      DO 280 J=1,3
        IF(DIMAG(LAMBDA(J)).LT.0.001D0) GO TO 280
          WRITE(6,290)
  290 FORMAT(1H ,'EIGENVAL CONTAINS AN IMAGINARY PART.',/)
  280 CONTINUE
      WRITE(6,300)
  300 FORMAT(1H0,10X,'EIGENVAL AND EIGENVECTOR',/)
      DO 310 J=1,3
        EIGVAL(J)=DREAL(LAMBDA(J))
        DO 310 K=1,3
          EIGVEC(J,K)=DREAL(BCOMPL(J,K))
  310 CONTINUE
      WRITE(6,320)(EIGVAL(J),J=1,3)
  320 FORMAT(1H ,15X,3F10.2,/)
      WRITE(6,330)(EIGVEC(1,K),K=1,3)
      WRITE(6,331)(EIGVEC(2,K),K=1,3)
      WRITE(6,332)(EIGVEC(3,K),K=1,3)
  330 FORMAT(1H ,12X,'X   ',3F10.5)
  331 FORMAT(1H ,12X,'Y   ',3F10.5)
  332 FORMAT(1H ,12X,'Z   ',3F10.5)
      WRITE(6,340)
  340 FORMAT(1H0,//)
  200 CONTINUE
      WRITE(6,140)
  140 FORMAT(1H0,4X,'ISOTROPIC NUCLEAR SHIELDING')
      WRITE(6,150)
  150 FORMAT(1H0,7X,'I',3X,'DENSITY',4X,'DIAMAG',4X,'PARAMAG',5X,'TOTAL'
     1 ,/)
      NCARBN=0
      DO 160 I=1,NATOMS
      IF((AN(I).LE.4).OR.(AN(I).GE.10)) GO TO 160
        NCARBN=NCARBN+1
      IF(AN(I).EQ.5)DIAMAG(NCARBN)=4.45D0*(2.6D0-0.35D0*(XXY(I)-3.0D0))*
     *XXY(I)
      IF(AN(I).EQ.6)DIAMAG(NCARBN)=4.45D0*(3.25D0-0.35D0*(XXY(I)-4.0D0))
     **XXY(I)
      IF(AN(I).EQ.7)DIAMAG(NCARBN)=4.45D0*(3.9D0-0.35D0*(XXY(I)-5.0D0))*
     *XXY(I)
      IF(AN(I).EQ.8)DIAMAG(NCARBN)=4.45D0*(4.55D0-0.35D0*(XXY(I)-6.0D0))
     **XXY(I)
      IF(AN(I).EQ.9)DIAMAG(NCARBN)=4.45D0*(5.20D0-0.35D0*(XXY(I)-7.0D0))
     **XXY(I)
      CTOTAL(NCARBN)=DIAMAG(NCARBN)+PARAMG(NCARBN)
      WRITE(6,170) NCARBN,XXY(I),DIAMAG(NCARBN),PARAMG(NCARBN),CTOTAL(NC
     1ARBN)
  160 CONTINUE
  170 FORMAT(1H ,6X,I2,3X,F7.4,4X,F7.2,5X,F7.2,5X,F7.2)
      RETURN
      END



      SUBROUTINE SCFCLO
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ARRAYS/A(80,80),B(80,80),D(80,80)
      COMMON/GAB/XXX(240),EIG(80),XXXX(80),G(35,35),Q(80),YYY(80),ENERGY
     1 ,XXY(214)
      COMMON/INFO/NATOMS,CHARGE,MULTIP,AN(35),C(35,3),N
      COMMON/INFO1/CZ(35),U(80),ULIM(35),LLIM(35),NELECS,OCCA,OCCB
      COMMON/OPTION/OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MON
     1O,NEIG
      COMMON/IMAG/AIMAGE(80,80),BIMAGE(80,80),XIMAG(80)
      COMMON/COMP/BCOMPL(80,80),BGAUSS,IER
      COMMON/EORK/WORK1(80),WORK2(12800),LAMBDA(80),IWORK(160)
      COMMON/PERTBL/EL(18),NAME(20)
      COMMON/AA/AA(80,80)
      COMPLEX*16 BCOMPL,LAMBDA,WORK1,WORK2
      INTEGER OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MONO,NEIG
      INTEGER CHARGE,OCCA,OCCB,ULIM,U,AN,CZ,Z,EL,UL
      DIMENSION G1(18),F2(18)
      G1(3)=.092012D0
      G1(4)=.1407  D0
      G1(5)=.199265D0
      G1(6)=.267708D0
      G1(7)=.346029D0
      G1(8)=.43423 D0
      G1(9)=.532305D0
      F2(3)=.049865D0
      F2(4)=.089125D0
      F2(5)=.13041 D0
      F2(6)=.17372 D0
      F2(7)=.219055D0
      F2(8)=.266415D0
      F2(9)=.31580 D0
      Z=0
      IT=20
      OLDENG=0.D0
   10 CONTINUE
      IF(IER.NE.0) RETURN
      Z=Z+1
      ENERGY=0.D0
      DO 20 I=1,N
        A(I,I)=Q(I)
        DO 20 J=I,N
          A(J,I)=A(I,J)
   20 AIMAGE(J,I)=-AIMAGE(I,J)
      DO 30 I=1,N
        II=U(I)
        A(I,I)=A(I,I)-B(I,I)*G(II,II)*0.5D0
      DO 30 K=1,N
        JJ=U(K)
   30 A(I,I)=A(I,I)+B(K,K)*G(II,JJ)
      DO 35 I=1,N
   35 AIMAGE(I,I)=0.D0
      NM=N-1
      DO 40 I=1,NM
        II=U(I)
        LL=I+1
        DO 40 J=LL,N
          JJ=U(J)
          A(J,I)=A(J,I)-B(J,I)*G(II,JJ)*0.5D0
          AIMAGE(J,I)=AIMAGE(J,I)+BIMAGE(J,I)*G(II,JJ)*0.5D0
   40 CONTINUE
C      INDO MODIFICATION
      IF(OPTION.NE.INDO) GO TO 90
   50 DO 80 II=1,NATOMS
      K=AN(II)
      I=LLIM(II)
      IF(K.EQ.1) GO TO 80
   60 PAA=B(I,I)+B(I+1,I+1)+B(I+2,I+2)+B(I+3,I+3)
      A(I,I)=A(I,I)-(PAA-B(I,I))*G1(K)/6.D0
      DO 70 J=1,3
      A(I+J,I+J)=A(I+J,I+J)-B(I,I)*G1(K)/6.D0-(PAA-B(I,I))*7.D0*
     1 F2(K)/50.D0+B(I+J,I+J)*11.D0*F2(K)/50.D0
      A(I+J,I)=A(I+J,I)+B(I,I+J)*G1(K)/2.D0
      AIMAGE(I+J,I)=AIMAGE(I+J,I)-BIMAGE(I+J,I)*G1(K)/6.D0
   70 CONTINUE
      I1=I+1
      I2=I+2
      I3=I+3
      A(I2,I1)=A(I2,I1)+B(I2,I1)*11.D0*F2(K)/50.D0
      A(I3,I1)=A(I3,I1)+B(I3,I1)*11.D0*F2(K)/50.D0
      A(I3,I2)=A(I3,I2)+B(I3,I2)*11.D0*F2(K)/50.D0
      AIMAGE(I2,I1)=AIMAGE(I2,I1)-BIMAGE(I2,I1)*F2(K)/10.D0
      AIMAGE(I3,I1)=AIMAGE(I3,I1)-BIMAGE(I3,I1)*F2(K)/10.D0
      AIMAGE(I3,I2)=AIMAGE(I3,I2)-BIMAGE(I3,I2)*F2(K)/10.D0
   80 CONTINUE
   90 CONTINUE
      DO 100 I=1,N
  100 ENERGY=ENERGY+0.5D0*B(I,I)*(A(I,I)+Q(I))
      DO 105 I=1,NM
        LL=I+1
        DO 105 J=LL,N
  105 ENERGY=ENERGY+B(I,J)*(A(I,J)+A(J,I))
      WRITE(6,110) ENERGY
  110 FORMAT(//,10X,22H ELECTRONIC ENERGY    ,F16.10,2X,4HA.U.)
      IF((DABS(ENERGY-OLDENG).GE.0.00001D0).OR.(Z.LE.10.D0))GO TO 150
  120 Z=21
  130 WRITE(6,140)
  140 FORMAT(5X,18H ENERGY SATISFIED /)
      GO TO 170
  150 CONTINUE
  160 OLDENG=ENERGY
  170 CONTINUE
C     SYMMETRIZE F FOR PRINTING (MATRIX ACOMPL)
  180 DO 190 I=1,N
      DO 190 J=1,N
        BCOMPL(J,I)=DCMPLX(A(J,I),AIMAGE(J,I))
        BCOMPL(I,J)=DCONJG(BCOMPL(J,I))
  190 CONTINUE
      IF(Z.LT.21) GO TO 210
        WRITE(6,200)
  200 FORMAT(1X,27H HARTREE-FOCK ENERGY MATRIX)
C      CALL SCFOUT(0)
  210 CONTINUE
      CALL DHQ4(N,1)
      DO 1003 I=1,N 
        IF(DIMAG(LAMBDA(I)).GT.0.0001D0) IER=3
        IF(IER.NE.0) RETURN
 1003 EIG(I)=DREAL(LAMBDA(I))
      DO 1100 J=1,N
        AMINI=EIG(J)
        K1=J
        DO 1101 K=J,N
          IF(AMINI.LE.EIG(K)) GO TO 1101
            AMINI=EIG(K)
            K1=K
 1101 CONTINUE
      IF(K1.EQ.J) GO TO 1100
        EIG(K1)=EIG(J)
        EIG(J)=AMINI
        DO 1102 I=1,N
          WORK1(I)=BCOMPL(I,K1)
          BCOMPL(I,K1)=BCOMPL(I,J)
          BCOMPL(I,J)=WORK1(I)
 1102 CONTINUE
 1100 CONTINUE
      DO 1103 I=1,N
        DO 1103 J=1,N
          B(I,J)=DREAL(BCOMPL(I,J))
          BIMAGE(I,J)=DIMAG(BCOMPL(I,J))
 1103 CONTINUE
      IF(Z.LT.21) GO TO 240
  220 WRITE(6,230)
  230 FORMAT(1X,28H EIGENVALUES AND EIGENVECTORS)
C      CALL SCFOUT(1)
  240 CONTINUE
C      EIGENVECTORS (IN BCOMPL) ARE CONVERTED INTO DENSITY MATRIX (UN BCO)
      DO 280 I=1,N
        DO 260 J=1,N
          XXX(J)=0.D0
          XIMAG(J)=0.D0
          DO 250 K=1,OCCA
            XXX(J)=XXX(J)+B(I,K)*B(J,K)+BIMAGE(I,K)*BIMAGE(J,K)
            XIMAG(J)=XIMAG(J)+B(I,K)*BIMAGE(J,K)-BIMAGE(I,K)*B(J,K)
  250 CONTINUE
      XXX(J)=2.D0*XXX(J)
      XIMAG(J)=2.D0*XIMAG(J)
  260 CONTINUE
      DO 270 J=I,N
        B(I,J)=XXX(J)
        BIMAGE(I,J)=XIMAG(J)
  270 CONTINUE
  280 CONTINUE
      DO 275 I=1,N
        DO 275 J=1,N
          B(J,I)=B(I,J)
          BIMAGE(J,I)=-BIMAGE(I,J)
  275 CONTINUE
      IF(Z.LE.IT) GO TO 10
        DO 290 I=1,N
          DO 290 J=1,N
            BCOMPL(I,J)=DCMPLX(B(I,J),BIMAGE(I,J))
  290 BCOMPL(J,I)=DCONJG(BCOMPL(I,J))
  300 CONTINUE
      RETURN
      END



      SUBROUTINE HUCKCL(LLL)
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ARRAYS/A(80,80),B(80,80),D(80,80)
      COMMON/GAB/XXX(240),EIG(80),XXXX(80),G(35,35),Q(80),YYY(80),ENERGY
     1 ,XXY(214)
      COMMON/INFO/NATOMS,CHARGE,MULTIP,AN(35),C(35,3),N
      COMMON/INFO1/CZ(35),U(80),ULIM(35),LLIM(35),NELECS,OCCA,OCCB
      COMMON/OPTION/OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MON
     1O,NEIG
      COMMON/IMAG/AIMAGE(80,80),BIMAGE(80,80),XIMAG(80)
      COMMON/COMP/BCOMPL(80,80),BGAUSS,IER
      COMMON/EORK/WORK1(80),WORK2(12800),LAMBDA(80),IWORK(160)
      COMMON/PERTBL/EL(18),NAME(20)
      COMMON/GAUSTR/V1S2P(100),V2S2P(100),V2P2S(100),V2P2P1(100),V2P2P2(
     1 100),T1S2P(100),T2S2P(100),T2P2P1(100),T2P2P2(100),U2S2P(100),U2P
     2 2P1(100),U2P2P2(100),INDX1(35,35),INDX2(35,35),INVJ1I(100),INVJ1J
     3 (100),INVJ2I(100),INVJ2J(100),INVT1I(100),INVT1J(100),INVT2I(100)
     4 ,INVT2J(100),DXX(35,35),Y1(80,3,3),Y2(80,3,3)
      COMPLEX*16 BCOMPL,LAMBDA,WORK1,WORK2
      INTEGER OPTION,OPNCLO,HUCKEL,CNDO,INDO,CLOSED,OPEN,CONTR,MONO,NEIG
      INTEGER CHARGE,OCCA,OCCB,UL,AN,CZ,U,ULIM,ANI,EL
      DIMENSION ENEG(18,3),BETAO(18)
      DIMENSION G1(18),F2(18)
      DIMENSION QQ(80)
      BCORR=1.D0
c      IF(LLL.GT.1) GO TO 2002
      G1(3)=0.092012      D0
      G1(4)=0.1407        D0
      G1(5)=0.199265      D0
      G1(6)=0.267708      D0
      G1(7)=0.346029      D0
      G1(8)=0.43423       D0
      G1(9)=0.532305      D0
      F2(3)=0.049865      D0
      F2(4)=0.089125      D0
      F2(5)=0.13041       D0
      F2(6)=0.17372       D0
      F2(7)=0.219055	  D0
      F2(8)=0.266415	  D0
      F2(9)=0.31580       D0
      ENEG(1,1)=7.1761	D0
      ENEG(3,1)=3.1055	D0
      ENEG(3,2)=1.258	D0
      ENEG(4,1)=5.94557	D0
      ENEG(4,2)=2.563	D0
      ENEG(5,1)=9.59407	D0
      ENEG(5,2)=4.001	D0
      ENEG(6,1)=14.051	D0
      ENEG(6,2)=5.572	D0
      ENEG(7,1)=19.31637D0
      ENEG(7,2)=7.275	D0
      ENEG(8,1)=25.39017D0
      ENEG(8,2)=9.111	D0
      ENEG(9,1)=32.2724	D0
      ENEG(9,2)=11.08	D0
      ENEG(11,1)=2.804	D0
      ENEG(11,2)=1.302	D0
      ENEG(11,3)=0.150	D0
      ENEG(12,1)=5.1254	D0
      ENEG(12,2)=2.0516	D0
      ENEG(12,3)=0.16195D0
      ENEG(13,1)=7.7706	D0
      ENEG(13,2)=2.9951	D0
      ENEG(13,3)=0.22425D0
      ENEG(14,1)=10.0327D0
      ENEG(14,2)=4.1325	D0
      ENEG(14,3)=0.337  D0
      ENEG(15,1)=14.0327D0
      ENEG(15,2)=5.4638	D0
      ENEG(15,3)=0.500	D0
      ENEG(16,1)=17.6496D0
      ENEG(16,2)=6.989	D0
      ENEG(16,3)=0.71325D0
      ENEG(17,1)=21.5906D0
      ENEG(17,2)=8.7081 D0
      ENEG(17,3)=0.97695D0
      BETAO(1)= -13.	D0
      BETAO(3)= -9.		D0
      BETAO(4)= -13.	D0
      BETAO(5)= -17.	D0
      BETAO(6)= -15.	D0
      BETAO(7)= -25.	D0
      BETAO(8)= -31.	D0
      BETAO(9)= -39.	D0
      BETAO(11)=-7.7203	D0
      BETAO(12)=-9.4471	D0
      BETAO(13)=-11.3011D0
      BETAO(14)=-13.065	D0
      BETAO(15)=-15.070	D0
      BETAO(16)=-18.150	D0
      BETAO(17)=-22.330	D0
      NELECS=0
      DO 60 I=1,NATOMS
        NELECS=NELECS+CZ(I)
        LL=LLIM(I)
        UL=ULIM(I)
        ANI=AN(I)
        L=0
        DO 55 J=LL,UL
          L=L+1
          IF(L.EQ.1) GO TO 10
   20     IF(L.LT.5) GO TO 40
   30 A(J,J)=-ENEG(ANI,3)/27.21D0
      GO TO 50
   40 A(J,J)=-ENEG(ANI,2)/27.21D0
      GO TO 50
   10 A(J,J)=-ENEG(ANI,1)/27.21D0
   50 AIMAGE(J,J)=0.D0
      QQ(J)=A(J,J)
   55 CONTINUE
   60 CONTINUE
      IF(LLL.GT.1) GO TO 2002
      DO 5 J=1,N
        DO 5 I=1,N
          AIMAGE(I,J)=0.D0
    5 CONTINUE
      NELECS=NELECS-CHARGE
      OCCA=NELECS/2
      DO 90 I=2,N
        K=U(I)
        L=AN(K)
        UL=I-1
        DO 90 J=1,UL
          KK=U(J)
          LL=AN(KK)
          IF((L.GT.9).OR.(LL.GT.9)) GO TO 70
            A(I,J)=A(I,J)*(BETAO(L)+BETAO(LL))/54.42D0
          IF((L.EQ.1).AND.(LL.EQ.6)) GO TO 80
          IF((L.EQ.6).AND.(LL.EQ.1)) GO TO 80
            GO TO 85
   80 A(I,J)=A(I,J)*BCORR
      GO TO 85
   70 A(I,J)=0.75D0*A(I,J)*(BETAO(L)+BETAO(LL))/54.42D0
   85 AIMAGE(I,J)=0.0
      A(J,I)=A(I,J)
      AIMAGE(J,I)=0.D0
   90 CONTINUE
      GO TO 2000
 2002 CONTINUE
      DO 2001 I=1,N
        A(I,I)=QQ(I)
        DO 2001 J=I,N
          A(J,I)=A(I,J)
          AIMAGE(I,J)=0.D0
          AIMAGE(J,I)=0.D0
 2001 CONTINUE
 2000 CONTINUE
      GO TO (96,97,98),LLL
   96 IIII=2
      JJJJ=3
      GO TO 99
   97 IIII=3
      JJJJ=1
      GO TO 99
   98 IIII=1
      JJJJ=2
   99 CONTINUE
      CONST=0.21273D-5*BGAUSS
      IF(CONTR.EQ.MONO)GO TO 9999
      DO 92 II=2,NATOMS
        I0=LLIM(II)
        IF(AN(II).GT.2) GO TO 93
          DO 94 JJ=1,II-1
            IF(AN(JJ).LT.3) GO TO 94
              J0=LLIM(JJ)
              INDEX=INDX1(II,JJ)
              RIIII=C(JJ,IIII)-C(II,IIII)
              RJJJJ=C(II,JJJJ)-C(JJ,JJJJ)
              AIMAGE(I0,J0+IIII)=CONST*RJJJJ*V1S2P(INDEX)
              AIMAGE(I0,J0+JJJJ)=CONST*RIIII*V1S2P(INDEX)
   94 CONTINUE
      GO TO 92
   93 CONTINUE
      DO 95 JJ=1,II-1
      J0=LLIM(JJ)
      INDEX=INDX1(II,JJ)
      RIIII=C(JJ,IIII)-C(II,IIII)
      RJJJJ=C(II,JJJJ)-C(JJ,JJJJ)
      IF(AN(JJ).GT.2) GO TO 101
      AIMAGE(I0+IIII,J0)=CONST*RJJJJ*V1S2P(INDEX)
      AIMAGE(I0+JJJJ,J0)=CONST*RIIII*V1S2P(INDEX)
      GO TO 95
  101 CONTINUE
      RLLL=C(II,LLL)-C(JJ,LLL)
      AIMAGE(I0+IIII,J0)=CONST*RJJJJ*V2P2S(INDEX)
      AIMAGE(I0+JJJJ,J0)=CONST*RIIII*V2P2S(INDEX)
      AIMAGE(I0,J0+IIII)=CONST*RJJJJ*V2S2P(INDEX)
      AIMAGE(I0,J0+JJJJ)=CONST*RIIII*V2S2P(INDEX)
      AIMAGE(I0+LLL,J0+IIII)=CONST*RLLL*RJJJJ*V2P2P2(INDEX)
      AIMAGE(I0+LLL,J0+JJJJ)=CONST*RLLL*RIIII*V2P2P2(INDEX)
      AIMAGE(I0+IIII,J0+LLL)=-AIMAGE(I0+LLL,J0+IIII)
      AIMAGE(I0+JJJJ,J0+LLL)=-AIMAGE(I0+LLL,J0+JJJJ)
      AIMAGE(I0+IIII,J0+JJJJ)=CONST*(V2P2P1(INDEX)+(RIIII**2+RJJJJ**2)*
     1 V2P2P2(INDEX))
      AIMAGE(I0+JJJJ,J0+IIII)=-AIMAGE(I0+IIII,J0+JJJJ)
   95 CONTINUE
   92 CONTINUE
      DO 102 I=2,N
        DO 102 J=1,I-1
          AIMAGE(J,I)=-AIMAGE(I,J)
  102 CONTINUE
 9999 CONTINUE
      DO 91 II=1,NATOMS
        IF(AN(II).LT.3) GO TO 91
          I0=LLIM(II)
          AIMAGE(I0+IIII,I0+JJJJ)=CONST
          AIMAGE(I0+JJJJ,I0+IIII)=-CONST
   91 CONTINUE
      DO 100 I=1,N
        Q(I)=A(I,I)
        DO 100 J=1,N
          BCOMPL(I,J)=DCMPLX(A(I,J),AIMAGE(I,J))
  100 CONTINUE
 2120 CONTINUE
      CALL DHQ4(N,1)
      IF(IER.NE.0) RETURN
      DO 1003 I=1,N
      IF(DIMAG(LAMBDA(I)).GT.0.0001D0) IER=3
      IF(IER.NE.0) RETURN
 1003 EIG(I)=DREAL(LAMBDA(I))
      DO 1100 J=1,N
        AMINI=EIG(J)
        K1=J
        DO 1101 K=J,N
          IF(AMINI.LE.EIG(K)) GO TO 1101
            AMINI=EIG(K)
            K1=K
 1101 CONTINUE
      IF(K1.EQ.J) GO TO 1100
        EIG(K1)=EIG(J)
        EIG(J)=AMINI
        DO 1102 I=1,N
          WORK1(I)=BCOMPL(I,K1)
          BCOMPL(I,K1)=BCOMPL(I,J)
          BCOMPL(I,J)=WORK1(I)
 1102 CONTINUE
 1100 CONTINUE
C     EIGENVECTORS (IN BCOMPL) ARE CONVERTED INTO DENSITY MATRIX (IN BCO)
      DO 105 I=1,N
        DO 105 J=1,N
          B(I,J)=DREAL(BCOMPL(I,J))
          BIMAGE(I,J)=DIMAG(BCOMPL(I,J))
  105 CONTINUE
      DO 140 I=1,N
        DO 120 J=I,N
          XXX(J)=0.D0
          XIMAG(J)=0.D0
          DO 110 K=1,OCCA
          XXX(J)=XXX(J)+2.D0*B(I,K)*B(J,K)+2.D0*BIMAGE(I,K)*BIMAGE(J,K)
  110 XIMAG(J)=XIMAG(J)+2.D0*B(I,K)*BIMAGE(J,K)-2.D0*B(J,K)*BIMAGE(I,K)
  120 CONTINUE
      DO 130 J=I,N
        B(I,J)=XXX(J)
  130 BIMAGE(I,J)=XIMAG(J)     
  140 CONTINUE
      DO 150 I=1,N
        DO 150 J=1,N
          B(J,I)=B(I,J)
  150 BIMAGE(J,I)=-BIMAGE(I,J)
C     ADD V(AB) TO HCORE---CNDO
      DO 170 I=1,N
        J=U(I)
        Q(I)=Q(I)+0.5D0*G(J,J)
        DO 160 K=1,NATOMS
  160 Q(I)=Q(I)-DFLOAT(CZ(K))*G(J,K)
  170 CONTINUE
      IF(OPTION.EQ.CNDO) GO TO 290
  180 DO 280 I=1,NATOMS
      K=AN(I)
      J=LLIM(I)
      IF((K.GT.1).AND.(K.LT.10)) GO TO 190
        GO TO 280
  190 IF(K.LE.3) GO TO 210
  200 Q(J)=Q(J)+(DFLOAT(CZ(I))-1.5D0)*G1(K)/6.D0
  210 IF(K.EQ.3) GO TO 220
  230 IF(K.EQ.4) GO TO 240
  250 TEMP=G1(K)/3.D0+(DFLOAT(CZ(I))-2.5D0)*2.D0*F2(K)/25.D0
      GO TO 260
  240 TEMP=G1(K)/4.D0
      GO TO 260
  220 TEMP=G1(K)/12.D0
  260 CONTINUE
      DO 270 L=1,3
  270 Q(J+L)=Q(J+L)+TEMP
  280 CONTINUE
  290 CONTINUE
      DO 300 I=1,N
  300 A(I,I)=Q(I)
      DO 310 I=1,N
        DO 310 J=1,N
  310 BCOMPL(I,J)=DCMPLX(A(I,J),AIMAGE(I,J))
      WRITE(6,320)
  320 FORMAT(1H0, ' CORE HAMILTONIAN ',/)
C     CALL SCFOUT(0)
      RETURN
      END



      FUNCTION FUNC(U,V,IND,JN,J1,J2,ASQ,ALPHA1,ALPHA2)
      IMPLICIT REAL*8(A-H,O-Z)
      IF(U.GE.1.D0) GO TO 10
        IF(U.LE.0.D0) GO TO 10
          IF(IND.EQ.2) GO TO 100  
C     FUNCTION FOR (I!M!J)
      F=U*(1.D0-U)*ASQ
      G=0.25D0*(ALPHA1**2/U+ALPHA2**2/(1.D0-U))
      X=2.D0*DSQRT(F*G)
      IF(JN.EQ.4) GO TO 20
        FUNCJ=0.25D0*(3.D0+3.D0*X+X*X)/(G**2.5*DEXP(X))
        GO TO 21
   20 CONTINUE
      FUNCJ=0.125D0*(15.D0+15.D0*X+6.D0*X*X+X**3)/(G**3.5*DEXP(X))
   21 CONTINUE
      FUNC=FUNCJ/(U**(FLOAT(J1)+0.5)*(1.D0-U)**(FLOAT(J2)+0.5))
      RETURN
  100 CONTINUE
C     FUNCTION FOR (I!M/R**3!J)
      IF(J1.GE.0) GO TO 11
      TAU=0.25D0*U*U*ASQ*(ALPHA1**2/U+ALPHA2**2/(1-U))
      SIGMA=(1-U)/U
      GO TO 12
   11 TAU=0.25D0*ASQ*(ALPHA1**2/U+ALPHA2**2/(1-U))
      SIGMA=0.D0
   12 X=2.D0*DSQRT((1.D0+SIGMA)*TAU)
      Y=2.D0*DSQRT((V*V+SIGMA)*TAU)
      IF(JN-2) 1,2,3
    1 FUNCT=(8.D0/3.D0)*V**4*DKBES(0,Y)
     1 +(2.D0/3.D0)*X*DKBES(1,X)/TAU
      GO TO 4
    2 FUNCT=(16.D0/15.D0)*V**6*DKBES(0,Y)
     1 +4.D0*X*DKBES(1,X)/(15.D0*TAU)+X*X*DKBES(2,X)/(3.D0*TAU*TAU)
      GO TO 4
    3 FUNCT=(32.D0/105.D0)*V**8*DKBES(0,Y)
     1 +8.D0*X*DKBES(1,X)/(105.D0*TAU)+2.D0*X*X*DKBES(2,X)/(15.D0*TAU*
     2 TAU)+X**3*DKBES(3,X)/(6.D0*TAU**3)
    4 CONTINUE
      IF(J1) 5,6,6
    5 IF(J2.GE.0) GO TO 7
      FUNC=FUNCT*U**(FLOAT(-J1)-0.5)*(1-U)**(FLOAT(-J2)-0.5)
      GO TO 8
    7 FUNC=FUNCT*U**(FLOAT(-J1)-0.5)*(1-U)**(FLOAT(J2)-0.5)
      GO TO 8
    6 IF(J2.GE.0) GO TO 9
      FUNC=FUNCT*(1-U)**(FLOAT(-J2)-0.5)*U**(FLOAT(J1)+0.5)
      GO TO 8
    9 FUNC=FUNCT/(U**(FLOAT(J1)+0.5)*(1-U)**(FLOAT(J2)+0.5))
    8 CONTINUE
      RETURN
   10 CONTINUE
      FUNC=0.D0
      RETURN
      END



      FUNCTION SS(NN1,LL1,MM,NN2,LL2,ALPHA,BETA)
      IMPLICIT REAL*8(A-H,O-Z)
C     PROCEDURE FOR CALCULATING REDUCED OVERLAP INTEGRALS
      COMMON/ARRAYS/S(80,80),Y(9,5,203),Z(17,45),XX(2900)
      COMMON/AUXINT/A(17),B(17)
      INTEGER ULIM
      N1=NN1
      L1=LL1
      M=MM
      N2=NN2
      L2=LL2
      P =(ALPHA+BETA)/2.D0
      PT=(ALPHA-BETA)/2.D0
      X =0.D0
      M=IABS(M)
C     REVERSE QUANTUM NUMBERS IF NECESSARY
      IF((L2.LT.L1).OR.((L2.EQ.L1).AND.(N2.LT.N1))) GO TO 20
   10   GO TO 30
   20 K=N1
      N1=N2
      N2=K
      K=L1
      L1=L2
      L2=K
      PT=-PT
   30 CONTINUE
      K=MOD((N1+N2-L1-L2),2)
C     FIND A AND B INTEGRALS
      NNN=N1+N2
      CALL AINTGS(P,NNN)
      CALL BINTGS(PT,NNN)
      IF((L1.GT.0).OR.(L2.GT.0)) GO TO 60
C     BEGIN SECTION USED FOR OVERLAP INTEGRALS INVOLVING S FUNCTIONS
C     FIND Y TABLE NUMBER L
   40 L=(90-17*N1+N1**2-2*N2)/2
      ULIM = N1+N2
      LLIM = 0
      DO 50 I=LLIM,ULIM
        NNI1=N1+N2-I+1     
   50 X=X+Z(I+1,L)*A(I+1)*B(NNI1)/2.D0
      SS=X
      GO TO 80
C     BEGIN SECTION USED FOR OVERLAPS INVOLVING NON-S FUNCTIONS
C     FIND Y TABLE NUMBER L
   60 L=(5-M)*(24-10*M+M**2)*(83-30*M+3*M**2)/120+
     1  (30-9*L1+L1**2-2*N1)*(28-9*L1+L1**2-2*N1)/8+
     2  (30-9*L2+L2**2-2*N2)/2
      LLIM=0
      DO 70 I=LLIM,8
        ULIM=4-MOD(K+I,2)
      DO 70 J=LLIM,ULIM
        IIII=2*J+MOD(K+I,2)+1
   70 X=X+Y(I+1,J+1,L)*A(I+1)*B(IIII)
      L1MM=L1-M
      L2MM=L2-M
      L1PM=L1+M
      L2PM=L2+M
      SS=X*(FACT(M+1)/8.D0)**2*DSQRT(DFLOAT(2*L1+1)*FACT(L1MM)*
     1 DFLOAT(2*L2+1)*FACT(L2MM)/(4.D0*FACT(L1PM)*FACT(L2PM)))
   80 CONTINUE
      RETURN
      END



      SUBROUTINE HARMTR(T,MAXL,E)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION T(9,9),E(3)
      COST=E(3)
      IF((1.D0-COST**2).GT.0.0000000001) GO TO 20
   10 SINT=0.D0
      GO TO 30
   20 SINT=DSQRT(1.D0-COST**2)
   30 CONTINUE
      IF(SINT.GT.0.000001D0) GO TO 50
   40 COSP = 1.D0
      SINP = 0.D0
      GO TO 70
   50 COSP = E(1)/SINT
   60 SINP = E(2)/SINT
   70 CONTINUE
      DO 80 I=1,9
        DO 80 J=1,9
   80 T(I,J) = 0.D0
      T(1,1) = 1.D0
      IF(MAXL.GT.1) GO TO 100
   90 IF(MAXL.GT.0) GO TO 110
      GO TO 120
  100 COS2T = COST**2-SINT**2
      SIN2T = 2.D0*SINT*COST
      COS2P = COSP**2-SINP**2
      SIN2P = 2.D0*SINP*COSP
C     TRANSFORMATION MATRIX ELEMENTS FOR D FUNCTIONS
      SQRT3=DSQRT(3.D0)
      T(5,5) = (3.D0*COST**2-1.D0)/2.D0
      T(5,6) = -SQRT3*SIN2T/2.D0
      T(5,8) = SQRT3*SINT**2/2.D0
      T(6,5) = SQRT3*SIN2T*COSP/2.D0
      T(6,6) = COS2T*COSP
      T(6,7) = -COST*SINP
      T(6,8) = -T(6,5)/SQRT3
      T(6,9) = SINT*SINP
      T(7,5) = SQRT3*SIN2T*SINP/2.D0   
      T(7,6) = COS2T*SINP
      T(7,7) = COST*COSP
      T(7,8) = -T(7,5)/SQRT3
      T(7,9) = -SINT*COSP
      T(8,5) = SQRT3*SINT**2*COS2P/2.D0
      T(8,6) = SIN2T*COS2P/2.D0
      T(8,7) = -SINT*SIN2P
      T(8,8) = (1.D0+COST**2)*COS2P/2.D0
      T(8,9) = -COST*SIN2P
      T(9,5) = SQRT3*SINT**2*SIN2P/2.D0
      T(9,6) = SIN2T*SIN2P/2.D0
      T(9,7) = SINT*COS2P
      T(9,8) = (1.D0+COST**2)*SIN2P/2.D0
      T(9,9) = COST*COS2P
  110 CONTINUE
      T(2,2) = COST*COSP
      T(2,3) = -SINP
      T(2,4) = SINT*COSP
      T(3,2) = COST*SINP
      T(3,3) = COSP
      T(3,4) = SINT*SINP
      T(4,2) = -SINT
      T(4,4) = COST
  120 CONTINUE
      RETURN
      END



      SUBROUTINE RELVEC(R,E,C1,C2)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION E(3),C1(3),C2(3)
      X=0.D0
      DO 10 I=1,3
        E(I) = C2(I)-C1(I)
        X = X+E(I)**2
   10 CONTINUE
      R=DSQRT(X)
      DO 40 I=1,3
        IF(R.GT..000001D0) GO TO 30
   20 GO TO 40
   30 E(I) = E(I)/R
   40 CONTINUE
      RETURN
      END



      FUNCTION FACT(N)
      IMPLICIT REAL*8(A-H,O-Z)
      PRODT = 1.D0
   20 DO 30 I=1,N
   30 PRODT=PRODT*DFLOAT(I)
   40 FACT=PRODT
      RETURN
      END



      SUBROUTINE BINTGS(X,K)
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/AUXINT/A(17),B(17)
      ABSX=DABS(X)
      IF(ABSX.GT.3.D0) GO TO 120
   10 IF(ABSX.GT.2.D0) GO TO 20
   40 IF(ABSX.GT.1.D0) GO TO 50
   70 IF(ABSX.GT..5D0) GO TO 80
  100 IF(ABSX.GT..000001D0) GO TO 110
      GO TO 170
  110 LAST=6
      GO TO 140
   80 IF(K.LE.5) GO TO 120
   90 LAST=7
      GO TO 140
   50 IF(K.LE.7) GO TO 120
   60 LAST=12
      GO TO 140
   20 IF(K.LE.10) GO TO 120
   30 LAST=15
      GO TO 140
  120 EXPX=DEXP(X)
      EXPMX=1.D0/EXPX
      B(1)=(EXPX-EXPMX)/X
      DO 130 I=1,K
  130 B(I+1)=(DFLOAT(I)*B(I)+(-1.D0)**I*EXPX-EXPMX)/X
      GO TO 190
  140 Y=0.D0
      Y=2.D0
      DO 150 M=1,LAST
  150 Y=Y+(-X)**M*(1.D0-(-1.D0)**(M+1))/(FACT(M)*DFLOAT(M+1))
      B(1)=Y
      DO 160 I=1,K
        Y=0.D0
        Y=Y+(1.D0-(-1.D0)**(I+1))/DFLOAT(I+1)
        DO 200 M=1,LAST
  200 Y=Y+(-X)**M*(1.D0-(-1.D0)**(M+I+1))/(FACT(M)*DFLOAT(M+I+1))
  160 B(I+1)=Y
      GO TO 190
  170 B(1)=2.D0
      DO 180 I=1,K
  180 B(I+1)=(1.D0-(-1.D0)**(I+1))/DFLOAT(I+1)
  190 CONTINUE
      RETURN
      END



      SUBROUTINE AINTGS(X,K)
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON/AUXINT/A(17),B(17)
      A(1)=DEXP(-X)/X
      DO 10 I=1,K
   10    A(I+1) = (A(I)*DFLOAT(I)+DEXP(-X))/X
      RETURN
      END




      FUNCTION DGASPD (FUNC,N,M,C,D,E,F,IND,JN,J1,J2,ASQ,ALPHA1,
     * ALPHA2)
      IMPLICIT REAL*8(A-H,O-Z)
      COMMON XXX(10)
      DIMENSION A(6,12),X(6,12),AA(24),U(24),BB(24),V(24)
     1,A1(19),A2(19),A3(19),A4(15)
     2,X1(19),X2(19),X3(19),X4(15)
      EQUIVALENCE (A(1,1),A1(1)),(A(2,4),A2(1)),(A(3,7),A3(1)),(A(4,10),
     1 A4(1))
     2,           (X(1,1),A1(1)),(X(2,4),A2(1)),(X(3,7),A3(1)),(X(4,10),
     3 A4(1))
      DATA X1	  /				  0.86113631159405260D+00
     1,  0.96028985649753620D+00, 0.98156063424671920D+00
     2,  0.98940093499164990D+00, 0.99312859918509490D+00
     3,  0.99518721999702140D+00, 0.33998104358485630D+00
     4,  0.79666647741362670D+00, 0.90411725637047490D+00
     5,  0.94457502307323260D+00, 0.96397192727791380D+00
     6,  0.97472855597130950D+00, 0.00000000000000000D-40
     7,  0.52553240991632900D+00, 0.76990267419430470D+00
     8,  0.86563120238783170D+00, 0.91223442825132590D+00
     9,  0.93827455200273280D+00, 0.00000000000000000D-40 /
      DATA X2	  /				  0.18343464249564980D+00
     1,  0.58731795428661740D+00, 0.75540440835500300D+00
     2,  0.83911697182221880D+00, 0.88641552700440100D+00
     3,  0.00000000000000000D-40, 0.00000000000000000D-40
     4,  0.36783149899818020D+00, 0.61787624440264370D+00
     5,  0.74633190646015080D+00, 0.82000198597390290D+00
     6,  0.00000000000000000D-40, 0.00000000000000000D-40
     7,  0.12523340851146890D+00, 0.45801677765722740D+00
     8,  0.63605368072651500D+00, 0.74012419157855440D+00
     9,  0.00000000000000000D-40, 0.00000000000000000D-40 /
      DATA X3	  /				  0.00000000000000000D-40
     1,  0.28160355077925890D+00, 0.51086700195082710D+00
     2,  0.64809365193697560D+00, 0.00000000000000000D-40
     3,  0.00000000000000000D-40, 0.00000000000000000D-40
     4,  0.95012509837637440D-01, 0.37370608871541960D+00
     5,  0.54542147138883950D+00, 0.00000000000000000D-40
     6,  0.00000000000000000D-40, 0.00000000000000000D-40
     7,  0.00000000000000000D-40, 0.22778585114164510D+00
     8,  0.43379350762604510D+00, 0.00000000000000000D-40
     9,  0.00000000000000000D-40, 0.00000000000000000D-40 /
      DATA X4	  /				  0.51086700195082710D+00
     1,  0.76526521133497330D-01, 0.31504267969616340D+00
     2,  0.00000000000000000D-40, 0.00000000000000000D-40
     3,  0.00000000000000000D-40, 0.00000000000000000D-40
     4,  0.00000000000000000D-40, 0.19111886747361630D+00
     5,  0.00000000000000000D-40, 0.00000000000000000D-40
     6,  0.00000000000000000D-40, 0.00000000000000000D-40
     7,  0.00000000000000000D-40, 0.64056892862605620D-01 /
      DATA A1	  /				  0.34785484513745390D+00
     1,  0.10122853629037630D+00, 0.47175336386511830D-01
     2,  0.27152459411754100D-01, 0.17614007139152120D-01
     3,  0.12341229799987200D-01, 0.65214515486254620D+00
     4,  0.22238103445337450D+00, 0.10693932599531840D+00
     5,  0.62253523938647890D-01, 0.40601429800386940D-01
     6,  0.28531388628933660D-01, 0.00000000000000000D-40
     7,  0.31370664587788730D+00, 0.16007832854334620D+00
     8,  0.95158511682492780D-01, 0.62672048334109070D-01
     9,  0.44277438817419810D-01, 0.00000000000000000D-40 /
      DATA A2	  /				  0.36268378337836200D+00
     1,  0.20316742672306590D+00, 0.12462897125553390D+00
     2,  0.83276741576704750D-01, 0.59298584915436780D-01
     3,  0.00000000000000000D-40, 0.00000000000000000D-40
     4,  0.23349253653835480D+00, 0.14959598881657670D+00
     5,  0.10193011981724040D+00, 0.73346481411080310D-01
     6,  0.00000000000000000D-40, 0.00000000000000000D-40
     7,  0.24914704581340280D+00, 0.16915651939500250D+00
     8,  0.11819453196151840D+00, 0.86190161531953270D+00
     9,  0.00000000000000000D-40, 0.00000000000000000D-40 /
      DATA A3	  /				  0.00000000000000000D-40
     1,  0.18260341504492360D+00, 0.13168863844917660D+00
     2,  0.97618652104113890D-01, 0.00000000000000000D-40
     3,  0.00000000000000000D-40, 0.00000000000000000D-40
     4,  0.18945061045506850D+00, 0.14209610931838210D+00
     5,  0.10744427011596560D+00, 0.00000000000000000D-40
     6,  0.00000000000000000D-40, 0.00000000000000000D-40
     7,  0.00000000000000000D-40, 0.14917298647260380D+00
     8,  0.11550566805372560D+00, 0.00000000000000000D-40
     9,  0.00000000000000000D-40, 0.00000000000000000D-40 /
      DATA A4	  /				  0.13168863844917660D+00
     1,  0.15275338713072580D+00, 0.12167047292780340D+00
     2,  0.00000000000000000D-40, 0.00000000000000000D-40
     3,  0.00000000000000000D-40, 0.00000000000000000D-40
     4,  0.00000000000000000D-40, 0.12583745634682830D+00
     5,  0.00000000000000000D-40, 0.00000000000000000D-40
     6,  0.00000000000000000D-40, 0.00000000000000000D-40
     7,  0.00000000000000000D-40, 0.12793819534675220D+00 /
      I=N
      L=M
      IF(N-1) 600,100,100
  100 IF(N-6) 200,200,600
  200 IF(M-1) 600,300,300
  300 IF(M-6) 400,400,600
  400 NN=4*N
      C1=(D+C)/2.D0
      C2=(D-C)/2.D0
      N2=N+N
      DO 1 J=1,N2
        NJ=NN-J+1
        U(J)=C1-C2*X(N,J)
        U(NJ)=C1+C2*X(N,J)
        AA(J)=A(N,J)
    1 AA(NJ)=A(N,J)
      IF(IND.EQ.1) GO TO 10
        MM=4*M
        D1=(E+F)/2.D0
        D2=(F-E)/2.D0
        M2=M+M
        DO 2 K=1,M2
          MK=MM-K+1
          V(K)=D1-D2*X(M,K)
          V(MK)=D1+D2*X(M,K)
          BB(K)=A(M,K)
    2 BB(MK)=A(M,K)
      S=0.D0
      DO 3 J=1,NN
        DO 3 K=1,MM
    3 S=S+AA(J)*BB(K)*FUNC(U(J),V(K),IND,JN,J1,J2,ASQ,ALPHA1,ALPHA2)
      DGASPD=C2*D2*S
      N=I
      M=L
      RETURN
   10 CONTINUE
      S=0.D0
      DO 20 J=1,NN
   20 S=S+AA(J)*FUNC(U(J),U(J),IND,JN,J1,J2,ASQ,ALPHA1,ALPHA2)
      DGASPD=C2*S
      N=I
      RETURN
  600 WRITE(6,700) N,M
  700 FORMAT(1H0,'(SUBR. DGASPD) N=',I3,', M=',I3,',  N,M MUST BE LARGER
     1 THAN 0 AND SMALLER THAN 7')
      N=6
      M=6
      GO TO 400
      END



      FUNCTION DKBES (N,X)
C     MODIFIED BESSEL FUNCTION OF THE SECOND KIND --- DOUBLE ---
      REAL * 8          X
      REAL * 8          XABS,RECX,HALFX,W,Y,SUM,EXPX,D75,D65,
     *                  AI0,AI1,AI2,AK0,AK1,AK2,NUMER,DENOM,
     *                  Z
      REAL              XS,WS,YS,FK,C69,C173
      EQUIVALENCE (XABS,XS),(W,WS),(Y,YS)
      DATA D65,D75,C69,C173 / 1.0D65,1.0D75,69.0,175.0 /
C     CALL OVERFL(KJ)
      XABS = X
      NABS=IABS(N)
      IF( XABS ) 1,1,3
    1 DKBES=D75
      WRITE(6,2) N,X
    2 FORMAT(1H ,5X,'THE ARGUMENT OF DKBES IS INVALID.  N=',I10,'  X='
     *,D23.16 )
      RETURN
C
    3 IF(NABS.GE.30000) GO TO 33
      IF(XS.LT.C173) GO TO 4
   33 DKBES=0.0D0
      RETURN
    4 RECX=1.D0/XABS
      Z=RECX+RECX
C        Z=(2/X)
      IF(XS.GT.2.D0) GO TO 17
        HALFX=XABS*0.5D0
        W=DLOG(HALFX)
        IF(XS.GE.0.0001) GO TO 12
C        X LESS THAN 0.0001
      Y=HALFX*HALFX
      AI0=1.0D0+Y
      AK0=-W*AI0-5.7721566490153286 D-1+
     *4.22784335 D-1*Y
      IF(NABS) 6,5,6
    5 DKBES=AK0
      RETURN
    6 CONTINUE
      AK1=(RECX-HALFX*AK0)/AI0
      IF(NABS-1) 8,7,8
    7 AK2=AK1
      GO TO 26
    8 L=-C69/W
      IF(NABS.LE.L) GO TO 11
    9 DKBES=D75
      WRITE(6,10) N,X
   10 FORMAT(1H ,5X,'THE VALUE OF DKBES IS OVERFLOW.  N=',I10,'  ,X=',
     *D23.16 )
      RETURN
   11 CONTINUE
      GO TO 22
C     X LESS THAN OF EQUAL TO 2.0 AND GREATER THAN OR EQUAL TO 0.0001.
C     AT FIRST, I(0,X) AND I(1,X) ARE COMPUTED
   12 CONTINUE
      AI2=0.0
      AI1=1.0D-75
      SUM=AI1
      K=18
      IF(XS.GE.1.0) GO TO 13
        K=14
      IF(XS.GE.0.1) GO TO 13
        K=9
   13 FK=K
C     RECURRENCE RELATION USED IN DESCENDING ORDER.
      AI0=(AI1*Z)*FK+AI2
      K=K-1
      IF(K) 14,15,14
   14 SUM=SUM+AI0
      AI2=AI1
      AI1=AI0
      GO TO 13
   15 SUM=SUM+SUM+AI0
      EXPX=DEXP(XABS)
      AI0=(AI0/SUM)*EXPX 
C     THE VALUE OF I(0,X) HAS BEEN OBTIANED.
C     COMPUTE K(0,X) USING POWER SERIES EXPANSION
      Y=HALFX*HALFX
C
      AK0= ( ( ( 1.1 E-17 * YS + 1.533 E-15 )*YS
     *       +1.78593E-13)*YS + 1.709994E-11)*YS
      AK0 = ( ( AK0 + 1.31674867 D-9 ) * Y +7.9350965213 D-8 ) * Y
      AK0 = -W * AI0 + ( ( ( ( ( ( AK0
     A + 3.61262410320     D-6 ) * Y + 1.18480393641097  D-4 ) * Y
     B + 2.61478761880521  D-3 ) * Y + 3.489215745643890 D-2 ) * Y
     C + 2.3069608377461679D-1 ) * Y + 4.2278433509846714D-1 ) * Y
     D - 5.7721566490153286D-1 
C
      IF(NABS) 16,5,16
   16 CONTINUE
C     COMPUTE K(1,X) USING LOMMEL'S RELATION
      AI1=(AI1/SUM)*EXPX
      AK1=(RECX-AK0*AK0+AK1)/AI0
      IF( NABS.EQ.1 ) GO TO 7
        GO TO 22
C     X GREATER THAN 2.0
C     K(0,X) AND K(1,X) ARE COMPUTED BY MEANS OF RATIONAL EXPRESSION
   17 Y=RECX*0.5D0
C     Y=1/2X
      W=DEXP(-XABS)*DSQRT(3.14159265358979D0*Y)
      IF(NABS.EQ.1) GO TO 29
      IF(XS.GE.6.0) GO TO 18
      NUMER = ( ( ( ( ( ( ( 
     A   9.607359468936920D-1   * Y + 2.529252282967791D+2 ) * Y
     B + 7.970033517428499D+3 ) * Y + 7.569208233441645D+4 ) * Y
     C + 3.057001687861112D+5 ) * Y + 6.316930369273204D+5 ) * Y
     D + 7.490317987301367D+5 ) * Y + 5.503149540522960D+5 ) * Y
      NUMER = ( (   NUMER
     F + 2.642871289210102D+5 ) * Y + 8.617173613052524D+4 ) * Y
C
      NUMER = ( ( ( ( ( ( (     NUMER
     G + 1.959077941045564D+4 ) * Y + 3.161402444515176D+3 ) * Y
     H + 3.658576787591567D+2 ) * Y + 3.045630347257958D+1 ) * Y
     I + 1.815056853732798D 0 ) * Y + 7.630840968696385D-2 ) * Y
     J + 2.198080790671052D-3 ) * Y 
      NUMER = ( ( (             NUMER
     K + 4.108400060979278D-5 ) * Y + 4.468603071316900D-7 ) * Y
     L + 2.138087593931531D-9 ) * Y
C
      DENOM = ( ( ( ( ( ( (     Y
     A + 3.555555555555556D+2 ) * Y + 1.513244444444444D+4 ) * Y
     B + 1.959717714285714D+5 ) * Y + 1.079473194053918D+6 ) * Y
     C + 3.045125484052925D+6 ) * Y + 4.914134724130594D+6 ) * Y
     D + 4.892294125356680D+6 ) * Y 
      DENOM = ( ( (             DENOM
     E + 3.168987751788133D+6 ) * Y + 1.388013537038700D+6 ) * Y
     F + 4.227486032369927D+5 ) * Y
C
      DENOM = ( ( ( ( ( ( (     DENOM
     G + 9.133105119891823D+4 ) * Y + 1.418093261050334D+4 ) * Y
     H + 1.593555554804435D+3 ) * Y + 1.296908735314483D+2 ) * Y
     I + 7.594657346992128D 0 ) * Y + 3.149536504573292D-1 ) * Y
     J + 8.975302543644857D-3 ) * Y
      DENOM = ( (             DENOM
     K + 1.663376533185147D-4 ) * Y + 1.797062622699450D-6 ) * Y
     L + 8.552350375726116D-9 
C
      GO TO 19
C
   18 CONTINUE
      NUMER = ( ( ( ( ( ( ( 
     A   9.344272845910382D-1   * Y + 7.602616403443910D+1 ) * Y
     B + 7.395743295243645D+2 ) * Y + 2.143299351353469D+3 ) * Y
     C + 2.591022778768068D+3 ) * Y + 1.552060383786633D+3 ) * Y
     D + 5.070112211483554D+2 ) * Y + 9.496661840062622D+1 ) * Y
      NUMER = ( ( ( (             NUMER
     E + 1.035232548375690D+1 ) * Y + 6.417643499456601D-1 ) * Y
     F + 2.076251506438793D-2 ) * Y + 2.696430527842588D-4 ) * Y
C
      DENOM = ( ( ( ( ( ( (       Y + 128.0D0 ) * Y
     A + 1.952426666666667D+3 ) * Y + 8.925379047619048D+3 ) * Y
     B + 1.700072199546485D+4 ) * Y + 1.598598652282462D+4 ) * Y
     C + 8.186476153700395D+3 ) * Y + 2.418159110016117D+3 ) * Y
      DENOM = ( ( ( (             DENOM
     D + 4.239448497375430D+2 ) * Y + 4.421129278670809D+1 ) * Y
     E + 2.659325881907253D 0 ) * Y + 8.426345399508084D-2 ) * Y
     F + 1.078572211137035D-3
C
   19 AK0 = W * ( 1.0D0 - NUMER / DENOM )
      IF( NABS .EQ. 0 ) GO TO 5
   29 CONTINUE
C     X IS GREATER THAN 2.0; N IS GREATER THAN OR EQUAL TO 1
C     RATIONAL APPROXIMATION IS USED TO COMPUTE K(1,X)
      IF( XS .GE. 6.0 ) GO TO 20
C                  
      NUMER = ( ( ( ( ( ( ( 
     A   4.612351477146149D+1   * Y + 5.662820251461119D+3 ) * Y
     B + 1.267729206953107D+5 ) * Y + 9.840279611657081D+5 ) * Y
     C + 3.490851284631075D+6 ) * Y + 6.612450857584894D+6 ) * Y
     D + 7.385469550146852D+6 ) * Y + 5.204090498624053D+6 ) * Y
      NUMER = ( (   NUMER
     E + 2.426670289964806D+6 ) * Y + 7.748520914563417D+5 ) * Y
C
      NUMER = ( ( ( ( ( ( (     NUMER
     F + 1.735592435557683D+5 ) * Y + 2.771333212784498D+4 ) * Y
     G + 3.183321561628970D+3 ) * Y + 2.636216725447433D+2 ) * Y
     H + 1.565459511840883D+1 ) * Y + 6.565891381439845D-1 ) * Y
     I + 1.888507334035547D-2 ) * Y 
      NUMER = ( ( (             NUMER
     J + 3.526831364930226D-4 ) * Y + 3.834684961199849D-6 ) * Y
     K + 1.834777493397057D-8 ) * Y
C
      DENOM = ( ( ( ( ( ( (        Y
     A + 640.D0               )     + 3.242666666666667D+4 ) * Y
     B + 4.565674666666667D+5 ) * Y + 2.649616021768707D+6 ) * Y
     C + 7.729933921057426D+6 ) * Y + 1.277675028273955D+7 ) * Y
     D + 1.295019033182651D+7 ) * Y 
      DENOM = ( ( (           DENOM + 8.506230281115516D+6 ) * Y
     E + 3.767465314819330D+6 ) * Y + 1.157963565388285D+6 ) * Y
C
      DENOM = ( ( ( ( ( ( (     DENOM
     F + 2.520737013090144D+5 ) * Y + 3.939147947362039D+4 ) * Y
     G + 4.450965515143424D+3 ) * Y + 3.639711612011614D+2 ) * Y
     H + 2.140312525061418D+1 ) * Y + 8.908688970078743D-1 ) * Y
     I + 2.547045316439757D-2 ) * Y 
      DENOM = ( (             DENOM
     J + 4.734225517526958D-4 ) * Y + 5.12820309044773D-6 ) * Y
     K + 2.446369991196075D-8
C
      GO TO 21
C
   20 CONTINUE
      NUMER = ( ( ( ( ( ( ( 
     A   2.727430674283096D+1   * Y + 1.138548998351567D+3 ) * Y
     B + 8.476942664996772D+3 ) * Y + 2.136946909366115D+4 ) * Y
     C + 2.388756033308294D+4 ) * Y + 1.367517138363589D+4 ) * Y
     D + 4.350909161812486D+3 ) * Y + 8.026823492415450D+2 ) * Y
      NUMER = ( ( ( (             NUMER
     E + 8.677093809042819D+1 ) * Y + 5.356622184821665D 0 ) * Y
     F + 1.730209588698993D-1 ) * Y + 2.247025439868823D-3 ) * Y
      DENOM = ( ( ( ( ( ( (       Y + 2.304D+2 ) * Y
     A + 4.183771428571428D+3 ) * Y + 2.082588444444444D+4 ) * Y
     B + 4.172904489795918D+4 ) * Y + 4.057981194255480D+4 ) * Y
     C + 2.128483799962103D+4 ) * Y + 6.401009408866192D+3 ) * Y
      DENOM = ( ( ( (             DENOM
     D + 1.137957228242879D+3 ) * Y + 1.200020804210648D+2 ) * Y
     E + 7.284240459137258D 0 ) * Y + 2.325671330264231D-1 ) * Y
     F + 2.996033919825096D-3
C
   21 CONTINUE
      AK1 = W *(  1.0D0 + NUMER/DENOM )
      IF( NABS .EQ. 1 ) GO TO 7
C     RECURRENCE RELATION IS USED IN ASCENDING
C     ORDER 10 CALCULATE K(N,X)
   22 CONTINUE
      K=1
   23 FK=K
      IF( DABS( AK1 ).GE. D65 ) GO TO 25
        AK2=AK1*Z*FK+AK0
   24 K=K+1
      IF (K.GE.NABS) GO TO 26
        AK0=AK1
        AK1=AK2
        GO TO 23
   25 W=AK1*1.0D-10
      Y=AK0*1.0D-10
      AK2=W*Z*FK+Y
      IF(AK2.GE.D65) GO TO 9
        AK2=AK2/1.0D-10
        GO TO 24
C     VALUE OF K(NABS,X) HAS BEEN OBTAINED IN AK2
   26 CONTINUE
      IF(X) 27,28,28
   27 K=NABS/2
      IF( K+K .NE. NABS ) AK2=-AK2
   28 DKBES=AK2
      RETURN
      END



      SUBROUTINE COEFFT
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/ARRAYS/S(80,80),Y(9135),Z(765),XX(2900)
      DO 1 I=1,9135
    1 Y(I)=0.0D0
      DO 2 I=1,765
    2 Z(I)=0.0D0
C     LOAD NON-ZERO Y COEFFICIENTS
      Y(7039)= 64.   D0
      Y(7040)= 64.   D0
      Y(7049)= -64.  D0
      Y(7032)= -128. D0
      Y(7041)= -64.  D0
      Y(7033)= -128. D0
      Y(7042)= 128.  D0
      Y(7025)= 64.   D0
      Y(7034)= 128.  D0
      Y(7026)= 64.   D0
      Y(7035)= -64.  D0
      Y(7027)= -64.  D0
      Y(6904)= -96.  D0
      Y(6913)= 32.   D0
      Y(6896)= -192. D0
      Y(6905)= 192.  D0
      Y(6906)= 288.  D0
      Y(6915)= -96.  D0
      Y(6889)= 192.  D0
      Y(6907)= -192. D0
      Y(6890)= 96. 	 D0
      Y(6899)= -288. D0
      Y(6891)= -192. D0
      Y(6901)= 96.   D0
      Y(2854)= -16.  D0
      Y(2863)= 16.   D0
      Y(2847)= 32.   D0
      Y(2856)= -16.  D0
      Y(2865)= -16.  D0
      Y(2840)= -16.  D0
      Y(2849)= -16.  D0
      Y(2858)= 32.   D0
      Y(2842)= 16.   D0
      Y(2851)= -16.  D0
      Y(2710)= 48.   D0
      Y(2719)= -48.  D0
      Y(2711)= 48.   D0
      Y(5190)= -64.  D0
      Y(5199)= 96.   D0
      Y(5182)= -32.  D0
      Y(5191)= 96.   D0
      Y(4375)= -144. D0
      Y(4384)= 96.   D0
      Y(4393)= -16.  D0
      Y(4368)= 144.  D0
      Y(4386)= -48.  D0
      Y(4395)= 96.   D0
      Y(4370)= -96.  D0
      Y(4379)= 48.   D0
      Y(4397)= -144. D0
      Y(4372)= 16.   D0
      Y(4381)= -96.  D0
      Y(4390)= 144.  D0
      Y(1900)= 144.  D0
      Y(1909)= -144. D0
      Y(1893)= -144. D0
      Y(1920)= 144.  D0
      Y(1895)= 144.  D0
      Y(1922)= -144. D0
      Y(1906)= -144. D0
      Y(1915)= 144.  D0
      Y( 955)= -16.  D0
      Y( 964)= 32.   D0
      Y( 973)= -16.  D0
      Y( 948)= 16.   D0
      Y( 966)= -48.  D0
      Y( 975)= 32.   D0
      Y( 950)= -32.  D0
      Y( 959)= 48.   D0
      Y( 977)= -16.  D0
      Y( 952)= 16.   D0
      Y( 961)= -32.  D0
      Y( 970)= 16.   D0
      Y(8155)= 64.   D0
      Y(8156)= -64.  D0
      Y(8165)= -64.  D0
      Y(8148)= -64.  D0
      Y(8157)= 64.   D0
      Y(8149)= 64.   D0
      Y(8158)= 64.   D0
      Y(8150)= -64.  D0
      Y(8020)= -96.  D0
      Y(8029)= 32.   D0
      Y(8021)= 128.  D0
      Y(8013)= 96.   D0
      Y(8031)= -96.  D0
      Y(8014)= -128. D0
      Y(8015)= -32.  D0
      Y(8024)= 96.   D0
      Y(7084)= -64.  D0
      Y(7076)= -128. D0
      Y(7085)=  64.  D0
      Y(7086)= 128.  D0
      y(7069)= 128.  D0
      Y(7070)= 64.   D0
      Y(7079)= -128. D0
      Y(2720)= -96.  D0
      Y(2729)= 48.   D0
      Y(2703)= -48.  D0
      Y(2712)= -48.  D0
      Y(2721)= 96.   D0
      Y(2704)= -48.  D0
      Y(2713)= 48.   D0
      Y(2722)= 48.   D0
      Y(2731)= -48.  D0
      Y(2705)= 96.   D0
      Y(2714)= -48.  D0
      Y(2723)= -48.  D0
      Y(2706)= 48.   D0
      Y(2715)= -96.  D0
      Y(2724)= 48.   D0
      Y(2707)= -48.  D0
      Y(2716)= 48.   D0
      Y(5329)= 64.   D0
      Y(5322)= -128. D0
      Y(5340)= -64.  D0
      Y(5315)= 64.   D0
      Y(5333)= 128.  D0
      Y(5326)= -64.  D0
      Y(5185)= -96.  D0
      Y(5194)= 32.   D0
	  Y(5186)= -96.  D0
	  Y(5195)= 64.   D0
	  Y(5204)= 32.   D0
	  Y(5178)= 96.   D0
	  Y(5187)= 32.   D0
	  Y(5196)= 64.   D0
	  Y(5179)= 96.   D0
	  Y(5188)= -32.  D0
	  Y(5197)= 32.   D0
	  Y(5206)= -96.  D0
	  Y(5180)= -64.  D0
	  Y(5189)= -32.  D0
	  Y(5198)= -96.  D0
	  Y(5181)= -32.  D0
	  Y(7071)= -64.  D0
	  Y(3205)= -16.  D0
	  Y(3214)= 16.   D0
	  Y(3206)= 16.   D0
	  Y(3215)= -16.  D0
 	  Y(3198)= 16.   D0
	  Y(3216)= -16.  D0
	  Y(3199)= -16.  D0
	  Y(3217)= 16.   D0
      Y(3200)= -16.  D0
      Y(3209)= 16.   D0
      Y(3201)= 16.   D0
      Y(3210)= -16.  D0
      Y(7579)= 64.   D0
	  Y(7580)= -64.  D0
      Y(7572)= -128. D0
      Y(7573)= 128.  D0
	  Y(7565)= 64.   D0
	  Y(7566)= -64.  D0
	  Y(5680)= 64.   D0
	  Y(5681)= -64.  D0
	  Y(5673)= -64.  D0
	  Y(5691)= -64.  D0
      Y(5674)= 64.   D0
	  Y(5692)= 64.   D0
	  Y(5684)= 64.   D0
	  Y(5685)= -64.  D0
	  Y(7435)= -96.  D0
	  Y(7444)= 32.   D0
	  Y(7436)= -96.  D0
	  Y(7445)= 160.  D0
	  Y(7428)= 96.   D0
	  Y(7437)= 128.  D0
	  Y(7446)= -96.  D0
	  Y(7429)= 96.   D0
	  Y(7438)= -128. D0
      Y(7447)= -96.  D0
	  Y(7430)= -160. D0
	  Y(7439)= 96.   D0
	  Y(7431)= -32.  D0
	  Y(7440)= 96.   D0
	  Y(5545)= -96.  D0
	  Y(5554)= 32.   D0
	  Y(5546)= 32.   D0
      Y(5555)= 32.   D0
      Y(5538)= 96.   D0
      Y(5556)= 32.   D0
      Y(5539)= -32.  D0
      Y(5557)= -96.  D0
      Y(5540)= -32.  D0
      Y(5549)= -32.  D0
      Y(5541)= -32.  D0
      Y(5550)= 96.   D0
      Y(3070)= 48.   D0
      Y(3079)= -48.  D0
      Y(3071)= -48.  D0
      Y(3080)= 48.	 D0
      Y(3063)= -48.  D0
      Y(3081)= 48.   D0    
      Y(3082)= -48.  D0
      Y(3064)= 48.   D0
      Y(3065)= 48.   D0
      Y(3074)= -48.  D0
      Y(3066)= -48.  D0
      Y(3075)= 48.   D0
      Y(8200)= -64.  D0
      Y(8201)= 64.   D0
      Y(8193)= 64.   D0	
      Y(8194)= -64.  D0	
      Y(7615)= -64.  D0
      Y(7616)= -64.  D0
      Y(7625)= 64.   D0
      Y(7608)= 64.   D0
      Y(7617)= 64.   D0
      Y(7609)= 64.   D0
      Y(7618)= -64.  D0
      Y(7610)= -64.  D0
      Y(3250)= 16.   D0
      Y(3259)= -16.  D0
      Y(3243)= -16.  D0	
      Y(3261)= 16.   D0	
      Y(3245)= 16.   D0
      Y(3254)= -16.  D0
      Y(5725)= -64.  D0	
      Y(5718)= 64.   D0	
      Y(5736)= 64.   D0
      Y(5729)= -64.  D0
C     LOAD NON-ZERO Z COEFFICIENTS
      Z(341 )= -1.   D0
      Z(343 )= 3.    D0
      Z(345 )= -3.   D0
      Z(347 )= 1.    D0
      Z(664 )= -1.   D0
      Z(665 )= 5.    D0
      Z(666 )= -10.  D0
      Z(667 )= 10.   D0
      Z(668 )= -5.   D0
      Z(669 )= 1.    D0
      Z(154 )= -1.   D0
      Z(156 )= 5.    D0
      Z(158 )= -10.  D0
      Z(160 )= 10.   D0
      Z(162 )= -5.   D0
      Z(164 )=  1.   D0
      Z(222 )= -1.   D0
      Z(223 )=  1.   D0
      Z(224 )=  4.   D0
      Z(225 )= -4.   D0
      Z(226 )= -6.   D0
      Z(227 )= 6.    D0
      Z(228 )= 4.    D0
      Z(229 )= -4.   D0
      Z(230 )= -1.   D0
      Z(231 )= 1.    D0
      Z(307 )= -1.   D0
      Z(308 )= 2.    D0
      Z(309 )= 2.    D0
      Z(310 )= -6.   D0
      Z(312 )= 6.    D0
      Z(313 )= -2.   D0
      Z(314 )= -2.   D0
      Z(315 )= 1.    D0
      Z(409 )= -1.   D0
      Z(410 )= 3.    D0
      Z(411 )= -1.   D0
      Z(412 )= -5.   D0
      Z(413 )= 5.    D0
      Z(414 )= 1.    D0
      Z(415 )= -3.   D0
      Z(416 )= 1.    D0
      Z(528 )= -1.   D0
      Z(529 )= 4.    D0
      Z(530 )= -5.   D0
      Z(532 )= 5.    D0
      Z(533 )= -4.   D0
      Z(534 )= 1.    D0
      Z(562 )= -1.   D0
      Z(563 )= 2.    D0
      Z(565 )= -2.   D0
      Z(566 )= 1.    D0
      Z(732 )= -1.   D0
      Z(733 )= 1.    D0
      Z(545 )= 1.    D0
      Z(546 )= -3.   D0
      Z(547 )= 2.    D0
      Z(548 )= 2.    D0
      Z(549 )= -3.   D0
      Z(550 )= 1.    D0
      Z(579 )= 1.    D0
      Z(580 )= -1.   D0
      Z(581 )= -1.   D0
      Z(582 )= 1.    D0
      Z(596 )= -1.   D0
      Z(598 )= 1.    D0
      Z(443 )= -1.   D0
      Z(444 )= 1.    D0
      Z(445 )= 2.    D0
      Z(446 )= -2.   D0
      Z(447 )= -1.   D0
      Z(448 )= 1.    D0
      Z(698 )= -1.   D0
      Z(699 )= 3.    D0
      Z(700 )= -3    D0
      Z(701 )= 1.    D0
      Z(324 )= 1.    D0
      Z(325 )= -1.   D0
      Z(326 )= -3.   D0
      Z(327 )= 3.    D0
      Z(328 )= 3.    D0
      Z(329 )= -3.   D0
      Z(330 )= -1.   D0
      Z(331 )= 1.    D0
      Z(460 )= 1.    D0
      Z(462 )= -2.   D0
      Z(464 )= 1.    D0
      RETURN
      END